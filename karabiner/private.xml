<?xml version="1.0"?>
<root>

<!-- _modif def -->
<modifierdef>MY_CAPSLOCK</modifierdef>
<modifierdef>MY_OPTION_L</modifierdef>
<modifierdef>MY_CONTROL_L</modifierdef>


<!-- _profile def  -->
<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_SHELL_switchprofile_general</name>
    <url type="shell">
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name general]]>
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name general]]>
   </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_SHELL_switchprofile_gaming</name>
    <url type="shell">
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name gaming]]>
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name gaming]]>
    </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_SHELL_switchprofile_python</name>
    <url type="shell">
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name python]]>
        <![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name python]]>
    </url>
</vkopenurldef>

<!-- _app def  -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_APP_IntelliJ</name>
<url type="file">/Applications/IntelliJ IDEA.app</url>
</vkopenurldef>

<appdef>
<appname>MINDNODE</appname>
<equal>com.ideasoncanvas.MindNodeMac</equal>
</appdef>

<appdef>
<appname>DICTIONARY</appname>
<equal>com.apple.Dictionary</equal>
</appdef>

<appdef>
<appname>XCODE</appname>
<equal>com.apple.dt.Xcode</equal>
</appdef>

<appdef>
<appname>ITERM</appname>
<equal>com.googlecode.iterm2</equal>
</appdef>

<!-- _km urls -->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRAW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: draw.io"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_BRILLIANT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: brilliant"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DROPBOX</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: dropbox"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REPL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: repl"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITTER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: twitter"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITCH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: twitch"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEWARS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: code wars"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITBOOKS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: gitbooks"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV</name>
  <url type="shell"> osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: arxiv"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE_AUTOPLAY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: youtube autoplay"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DRIVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: google drive"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HASHNODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: hashnode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: google"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MAIL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: tutanota"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODESANDBOX</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: codesandbox"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DUCKDUCKGO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: duckduckgo"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_NETLIFY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: netlify"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_FRONT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github - front"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_UNSPLASH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: unsplash"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_AWS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: aws"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LICHESS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: lichess"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_IMGUR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: imgur"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TRAVIS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: travis"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOCALHOST</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: localhost"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GO_PLAYGROUND</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: go playground"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REGEX101</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: regex101"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: npm"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_POCKET</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: pocket"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ANALYTICS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: google analytics"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEARN_ANYTHING</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: learn anything"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRIBBLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: dribble"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: stack"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOURCEGRAPH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: sourcegraph"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA_ANSWER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: quora answer"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SLACK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: slack"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_TOP_NEW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: reddit top new"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: mozilla dev"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD_RECENT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: pinboard recent"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_TRENDING</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github trending"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_REAL_TIME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: stack real time"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_EXCHANGE_HOT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: stack exchange hot"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: lobsters"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_COURSERA</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: coursera"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODE_UNIVERSITY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: coding interview university"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: pinboard"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_JSFIDDLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: jsfiddle"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: kaggle"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_ALL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: all reddit"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HABRAHABR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: habrahabr"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEPEN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: codepen"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKERRANK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: hackerrank"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MEDIUM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: medium"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_WIKI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: wiki"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PRODUCT_HUNT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: product hunt"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: reddit unread"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS_NEW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: hacker news new"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: reddit"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MIT_COURSES</name>
  <url type="shell">
  osascript -e '
  tell application "Keyboard Maestro Engine"
  do script "w: mit opencourseware"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_FREECODECAMP</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: freecodecamp"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: quora"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_WAKATIME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: wakatime"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_ALL_NOTIFICATIONS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github - all notifications"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_OVERFLOW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: stack overflow"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: youtube"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEETCODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: leetcode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOUNDCLOUD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: soundcloud"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HCKR_NEWS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: hckr news"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KHAN_ACADEMY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: khan academy"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ALFRED_FORUM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: alfred forum"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KM_FORUM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: km forum"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_ASSIGNED_ISSUES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github - assigned issues"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: reddit"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_NOTIFICATIONS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: github - notifications"
    end tell
    '
  </url>
</vkopenurldef>

<!-- _timer def-->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_10</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 10 reminder"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_60</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 60 reminder"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_20</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 20 reminder"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_30</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 30 reminder"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_40</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 40 reminder"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_TIMER_50</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 50 reminder"
    '
  </url>
</vkopenurldef>

<!-- _km def-->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_RERUN_CMD_ITERM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: rerun command in iterm"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_LAST_N_MACROS_EXECUTED</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: list last n macros executed"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_INSERT_BACKQUOTES_AND_CLIP</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: insert `` and clipboard"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_1</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open iTerm 1st tab"
   end tell
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F1</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f1"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F2</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f2"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F3</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f3"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F4</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f4"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F5</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f5"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F6</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f6"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_F7</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "f7"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_DUCKDUCKGO_CLIPBOARD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: duckduckgo clipboard"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_GOOGLE_CLIPBOARD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: google clipboard"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_GET_CURRENT_CHROME_URL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: get current url from chrome"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_COMMIT_WIKI_WITH_SPARKLES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: commit with ✨ my wiki"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CMD_CLICK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: cmd click"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TOP_MIDDLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: mouse pointer top middle"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PLAY_JS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open play.js"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_MATH_HASKELL_FILE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open math.hs"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_RUN_PY_FILE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open run.py"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_GO_PLAY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open go-play"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TO_CENTRE_SCREEN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: centre mouse pointer"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY_AND_OPEN_WITH_VS_CODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: clone repo to ~/play and open with vs code"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY_AND_OPEN_WITH_SUBLIME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: clone repo to ~/play and open with sublime"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_PASS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: pass"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_TITLE_CASE_TEXT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: title case selected text"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MANIPULATE_CLIPBOARD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: manipulate clipboard"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_LOWERCASE_SELECTED_TEXT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: lowercase selected text"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_FOCUS_60_MIN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: focus for 60 min"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: clone repo to ~/play"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_SAFARI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open url in safari"
    end tell
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_READ</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: 2Do with current url as note - read"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: 2Do with current url as note"
    end tell
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_GODOC</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "w: godoc"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_SELECTED_TEXT_TO_ANKI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: selected text to anki"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_DECREASE_YOUTUBE_PLAYBACK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: decrease playback on youtube"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_INCREASE_YOUTUBE_PLAYBACK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: increase playback on youtube"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_DAYONE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: screenshot to day one"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT_IN_ITERM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: run command in iterm"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MINDNODE_SCREENSHOT_TABBED</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: screenshot to mindnode tabbed"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: paste selected text in previous application"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_DICTIONARY_SELECTED_TEXT_TO_MINDNODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "dictionary: selected text to mindnode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_ANKI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: screenshot to anki"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_SELECTED_TEXT_TO_MINDNODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: selected text to mindnode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_ITERM_START_NEXT_LINE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "iterm: next line"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_NEW_MINDNODE_FILE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: new mindnode file"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_NEW_SKETCH_FILE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: new sketch file"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CREATE_NEW_CONTACT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: create new contact"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_RESET_BITBAR_TODO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: reset todo in bitbar"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_EDIT_KEYBOARD_SHORTCUTS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: edit keyboard shortcuts"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_LINE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: cut current line"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: get current url from safari"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_TEST</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "test"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_LIKE_AND_SAVE_CURRENT_UNSPLASH_WALLPAPER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: like and save current unsplash wallpaper"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_NEW_SNIPPETSLAB_SNIPPET</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: new snippetslab snippet"
    end tell
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_ITERM_SNIPPET_FROM_SELECTION</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "iterm: snippet from selection"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PRIMARY_NEWS_PRESET</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: open primary news preset"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_UPPERCASE_SELECTED_TEXT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: uppercase selected text"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CUT_WORD_BEFORE_CURSOR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: cut word before cursor"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_HIGHLIGHT_CURRENT_LINE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: highlight current line"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MAKE_MARKDOWN_LINK_FROM_SELECTION</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: make markdown link from selection"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_MINDNODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: screenshot to mindnode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_WORD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: cut current word"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_MATCH_SYMBOLS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "a: match symbols"
    end tell
    '
  </url>
</vkopenurldef>

<!-- _km insert things-->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_INSERT_FMT_PRINTLN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "i: fmt.println"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_INSERT_WORKFLOW:</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "i: workflow:"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_INSERT_LOG_PRINTLN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "i: log.println"
   end tell
    '
  </url>
</vkopenurldef>

<!-- _km paths def -->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_HOME_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: home"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_APPLICATIONS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: applications"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_ROOT_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: root"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_XCODE_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: xcode"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_GO_SRC_GITHUB</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: go src github"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_APP_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: app"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_UNI_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: uni"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PDFS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: pdfs"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PAPERS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: papers"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_IDEAS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: ideas"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_LEARNING_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: learning"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_OSS_LA_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: oss - la"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_OSS_NIKIVI_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: oss - nikivi"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_OSS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: oss"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DROPBOX_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: dropbox"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_GOPATH_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: gopath"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DOTFILES_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: dotfiles"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_APPLICATION_SUPPORT_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: application support"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_BOOKS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: books"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PROJECTS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: projects"
   end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DOCUMENTS_PATH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "path: documents"
   end tell
    '
  </url>
</vkopenurldef>

<!-- _km app def -->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ITUNES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: itunes"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CONSOLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: console"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_CAPRINE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: caprine"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_EMACS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: emacs"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_OBS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: obs"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PREVIEW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: preview"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PAGES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pages"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_MAPS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: maps"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHARLES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: charles"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: chrome"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TEXTBAR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: textbar"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_IINA</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: IINA"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: firefox"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_NUMI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: numi"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMISSION</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: transmission"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_FOG</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: fog"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DR_RACKET</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: DrRacket"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SCREENFLOW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: screenflow"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_KM_OPEN_AFFINITY_PHOTO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: affinity photo"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMIT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: transmit"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_UI_BROWSER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: UI browser"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXELMATOR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixelmator"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SHIP</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: ship"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SONIC_PI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: sonic pi"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_POSTGRES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: postgres"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI_TECHNOLOGY_PREVIEW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: safari technology preview"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SCRIPT_DEBUGGER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: script debugger"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SCRIPT_EDITOR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: script editor"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_LAST_TIME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: last time"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DICTIONARY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: dictionary"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ANKI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: anki"
    end tell
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_HAZEL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: hazel"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PYCHARM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pycharm"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_GOGLAND</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: gogland"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PAPRIKA_RECIPE_MANAGER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: paprika recipe manager"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_BRAINWAVE_STUDIO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: brainwave studio"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_MACDOWN</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: macdown"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ACTIVITY_MONITOR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: activity monitor"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_FLUME</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: flume"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SUBLIME_TEXT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: sublime text"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SYSTEM_PREFERENCES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: system preferences"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_MUSIXMATCH_LYRICS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: musiXmatch lyrics"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TIMING</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: timing"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_GITTER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: gitter"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_1PASSWORD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: 1password"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_AIRTABLE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: airtable"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_LITTLE_SNITCH_CONFIGURATION</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: little snitch configuration"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_NOTES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: notes"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SIMULATOR</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: simulator"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_POCKET</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pocket"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_YNAB</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: ynab"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_IBOOKS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: ibooks"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_PREFERENCES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: karabiner preferences"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_LICECAP</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: licecap"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DISCORD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: discord"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SKETCH</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: sketch"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CODERUNNER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: coderunner"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_XCCELLO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: xccello"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TOWER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: tower"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PAW</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: paw"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SOULVER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: soulver"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_REEDER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: reeder"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_FINDER</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: finder"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CONTACTS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: contacts"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TEXPAD</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: texpad"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SPOTIFY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: spotify"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_FANTASTICAL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: fantastical"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_BETTERTOUCHTOOL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: bettertouchtool"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: airmail"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: safari"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: ulysses"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_MINDNODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: mindnode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_XCODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: xcode"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: iterm"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_VS_CODE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: vs code"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: iterm"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: telegram"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_2DO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: 2do"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SLACK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: slack"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PDF_EXPERT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pdf expert"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: textual"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_SNIPPETSLAB</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: snippetslab"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_KEYBOARD_MAESTRO</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: keyboard maestro"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ALFRED_PREFERENCES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: alfred preferences"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL</name>
  <url type="shell">
  osascript -e '
  tell application "Keyboard Maestro Engine"
  do script "open: airmail"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: ulysses"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_DAY_ONE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: day one"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: tweetbot"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_INTELLIJ</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: intellij"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHATTY</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: chatty"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixave"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixave"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixave"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixave"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "open: pixave"
    end tell
    '
  </url>
</vkopenurldef>

<!-- _hs def -->
  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TODO_TASK</name>
    <url>hammerspoon://showTodoTask</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_OPEN_CONSOLE</name>
    <url>hammerspoon://openConsole</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_ACTIVE_WINDOWS</name>
    <url>hammerspoon://showActiveWindows</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_CLIPBOARD_CONTENT</name>
    <url>hammerspoon://showClipBoardContent</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_VISUALLY_CIRCLE_MOUSE</name>
    <url>hammerspoon://visuallyCircleMouse</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TIME</name>
    <url>hammerspoon://showTime</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_RELOAD_CONFIG</name>
    <url>hammerspoon://reloadConfig</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_TESTER</name>
    <url>hammerspoon://tester</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_CYCLE_WINDOWS_NEXT</name>
    <url>hammerspoon://cycleWindowsNext</url>
  </vkopenurldef>

  <vkopenurldef>
      <background/>
    <name>KeyCode::VK_OPEN_URL_HAMMERSPOON_CYCLE_WINDOWS_PREVIOUS</name>
    <url>hammerspoon://cycleWindowsPrevious</url>
  </vkopenurldef>

<!-- _km chrome-->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_CANVAS</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "c: canvas"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_FACEBOOK</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "c: facebook"
    end tell
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_3000</name>
  <url type="shell">
  osascript -e '
    tell application "Keyboard Maestro Engine"
    do script "c: 3000"
    end tell
    '
  </url>
</vkopenurldef>

<!-- _alfred def -->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CURL_URL</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "curl" in workflow "se.psu.alfred.download-file" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_LUCKY</name>
  <url type="shell">
  osascript -e '
    tell application "Alfred 3" to run trigger "googleLucky" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_KARABINER_PROFILES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "karabiner switch" in workflow "com.genkisugimoto.alfredworkflow.karabiner" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_UNITS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "units" in workflow "units.3.4.designandsuch.com" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "chromeProfiles" in workflow "com.mdreizin.chrome.bookmarks" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "history" in workflow "com.peterschmalfeldt.ChromeHistory" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CHEATSHEET</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "cheatsheet" in workflow "com.mutdmour.cheatsheet" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_TRASH</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "trash" in workflow "com.vitorgalvao.alfred.recentdownloads" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SOULVER</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "soulver" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_SHEETS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "Ulysses sheets" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MARKDOWN</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "markdown" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALL_FILES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "allFiles" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TWITTER</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "twitter" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_COMMIT_FOLDERS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "commitFolders" in workflow "nikivi.commit.folders" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_FILTER_KNOWLEDGE_WIKI_FOLDERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "wikiFolders" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARH_MARKDOWN_WIKI</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "markdownWiki" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MY_GITBOOKS_WIKI</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "gitbooksWiki" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_DROPBOX_SHARES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "dropboxShares" in workflow "com.vitorgalvao.alfred.recentdownloads" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MONTHS_NUMBERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "months" in workflow "nikivi.month.numbers" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TIME</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "time" in workflow "nikivi.time" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAGES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchPages" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_AFRED_GET_APP_VERSION</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "getVersion" in workflow "com.vitorgalvao.alfred.appversion" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ITERM_TTY</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "tty" in workflow "net.isometry.alfred.tty" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GUTENBERG</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "gutenberg" in workflow "net.deanishe.alfred-index-demo" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GO_TO_SUB</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "goToSub" in workflow "nikivi.go.to.sub" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_NEW_NOTE</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "createNote" in workflow "com.surrealroad.alfred-note-icloud" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_APPLE_MAPS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchMaps" in workflow "search.apple.maps" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CHROME_BOOKMARKS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchChromeBookmarks" in workflow "com.mdreizin.chrome.bookmarks" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CRYPTO_TRACK</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "cryptoTrack" in workflow "com.cryprotracker" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MEDIUM</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchMedium" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_HACKER_NEWS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchHN" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_VIEW_SCREENSHOTS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "webScreenshotsTaken" in workflow "com.vitorgalvao.alfred.webscreenshot" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_STACK</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchStack" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_DISPLAY_SONG</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "display_current_track_notification" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_QUORA</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchQuora" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SCREENSHOT_TO_GOOGLE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "similarImage" in workflow "net.deanishe.alfred-google-similar-images" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF_CONTENT</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "pdf" in workflow "nikivi.search.mindnode" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WIFI_CHECK</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "checkWifi" in workflow "nikivi.wifi.workflow" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_EDIT_FILES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "edit files" in workflow "nikivi.edit.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WEB_SEARCHES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "web searches" in workflow "nikivi.web.searches" with argument ""
    '
  </url>
</vkopenurldef>

<!-- _mind def-->
<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_REDDIT_MULTI_MIND</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/reddit-multi.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_CLI</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/explain-shell.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_RECENT</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/recent.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT_USERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/reddit-users.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_QUORA</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/quora.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_ARTICLES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/articles.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_CODEPEN</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/codepen.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_IMAGES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/images.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_PODCASTS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/podcasts.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_RESEARCH_PAPERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/research-papers.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_GISTS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/gists.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_STACK</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/stack.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_YOUTUBE</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/youtube.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_CLI</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/cli.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_MUSIC_PLAYLISTS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/music-playlists.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_SLACK</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/slack.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_GITTER</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/gitter.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_NOTES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/wiki.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_TWITTER</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/twitter.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_COURSES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/courses.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_PINBOARD</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/pinboard.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_BOOKS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/books.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_BLOGS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/blogs.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_PERSONAL</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/personal.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_WEB</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/web.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_GITHUB_USERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/github-users.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_PROFILES</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/profiles.json"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/reddit.json"
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SAFARI_FOLDERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "all-folders" in workflow "net.deanishe.alfred.safari" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TRANSMIT</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "transmit" in workflow "sher.transmit" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_UPDATE_MIND</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "updateMind" in workflow "nikivi.mind" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SHOW_QUEUE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "playQueue" in workflow "com.vdesabou.spotify.mini.player" with argument "✧Play Queue▹"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_CURRENT_SONG</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "web_search_current_track" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_OPEN_LYRICS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "lyrics" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS_UPDATE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "gitUpdate" in workflow "net.deanishe.alfred-git-repos" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_DIR_WATCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "playDirWatch" in workflow "com.vitorgalvao.alfred.recentdownloads" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_REMOVE_SONG_FROM_PLAYLIST</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "remove_current_track_from" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_SPOTIFY_LIKES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "show_alfred_playlist" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ADD_SONG_SPOTIFY</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "add_current_track_to_alfred_playlist_or_your_music" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "webScreenshot" in workflow "com.vitorgalvao.alfred.webscreenshot" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DASH_PROFILE_SWITCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "dashSwitch" in workflow "nikivi.dash-profiles" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "gitRepos" in workflow "net.deanishe.alfred-git-repos" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ICLOUD_TABS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "iCloud tabs" in workflow "com.targumanu.icloudtabs" with argument ""

    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PINBOARD</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "pinboard" in workflow "com.vitorgalvao.alfred.hackerboard" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_HACKER_NEWS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "hackerNews" in workflow "com.vitorgalvao.alfred.hackerboard" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SKETCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchSketch" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_DOCUMENTATION</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchDocs" in workflow "com.nirelbaz.d2" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INSIDE_MINDMAPS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "inside" in workflow "nikivi.mind" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_LEARNING_MINDMAPS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "learnAnything" in workflow "nikivi.learn-anything" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_BING</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "bing" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_CLEAN</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "cleanDesktop" in workflow "nikivi.clean.folders" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_READING_LIST</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "reading-list" in workflow "net.deanishe.alfred.safari" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchSafariBookmarks" in workflow "com.alfredapp.andrew.safari" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_AWESOME_LIST</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchAwesome" in workflow "com.maruware.awesome" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SUBREDDITS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchRedditSubreddits" in workflow "net.deanishe.alfred-reddit" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_DIR_WATCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "desktopDirWatch" in workflow "com.vitorgalvao.alfred.recentdownloads" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SYNONYMS_SEARCH</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "synonym" in workflow "com.vitorgalvao.alfred.synant" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_WOLFRAM_ALPHA</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchWolframAlpha" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CREATE_ARTIST_RADIO</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "artist_radio" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CREATE_SONG_RADIO</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "song_radio" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_ARTIST_OF_SONG</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "playArtistOfSong" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_ALBUM_OF_CURRENT_SONG</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "playAlbumOfSong" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_MY_LIKES_PLAYLIST</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "play_alfred_playlist" in workflow "com.vdesabou.spotify.mini.player" with argument ""

    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "add_current_track_to" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_UPDATE_GITHUB_INDEX</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "updateGitRepos" in workflow "me.lachlan.githubjump" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_SEARCH_TEX_FILES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "SearchTexFiles" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_COLOUR_PICKER</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "colourPicker" in workflow "tylereich.colors" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ACTIVATE_FOCUS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "activateFocus" in workflow "nikivi.block.websites" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_JAVA_PROJECTS_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "javaProjects" in workflow "com.codebud7.alfred-intellij" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "ssh" in workflow "net.deanishe.alfred-ssh" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PLAYGROUNDS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchPlaygrounds" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TIMER_VIEW</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "eggTimerView" in workflow "carlosnz.eggtimer2" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TIMER_START</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "eggTimerStart" in workflow "carlosnz.eggtimer2" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GODOC</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "goDocSearch" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ACTIVE_WINDOWS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "openWindows" in workflow "jnewland.alfred-open-windows" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE_CONTENT</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchMindNodeContent" in workflow "nikivi.search.mindnode" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_NEW_IOS_PLAYGROUND</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "newiOSPlayground" in workflow "com.chrisbuchholz.new-xcode-playground" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB_REPOS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "githubRepoSearch" in workflow "com.pawelgrzybek.github" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PODS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "podSearch" in workflow "ben.pod" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DASH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchDash" in workflow "com.nikivi.own.dash" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_YANDEX_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "yandex" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_LAYOUT_MANAGER</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "layoutManager" in workflow "de.leanovate.alfred.layout" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_PROCESS_CONTROL</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "processControl" in workflow "com.vitorgalvao.alfred.processcontrol" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CSS_COOKBOOK</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "cssCookbook" in workflow "com.bitbazar.lcc" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_HTTP_CODES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "httpStatusCodes" in workflow "fred.liang.status.codes" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ABOUT_THIS_MAC</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "aboutThisMac" in workflow "yeraze.AboutThisMac.v1.3" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_MAN_PAGE_IN_PDF</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "manInPDFSearch" in workflow "net.isometry.alfred.man" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_BATTERY</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "battery" in workflow "com.benzi.a2w.battery" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GITHUB_GISTS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "gists" in workflow "com.danielecook.gist" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "explainShell" in workflow "com.ryanparman.workflow.manpages" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_LOREM_IPSUM</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "loremIpsum" in workflow "jeremy.lorem" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_IMDB_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "imdbSearch" in workflow "alfredimdbsuggest" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GIPHY</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "giphySearch" in workflow "com.arbitrarydefinitions.giphy" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GEOLOCATION</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "geoLocation" in workflow "com.ryanparman.workflow.geo" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DATE_CALCULATOR</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "dateCalculator" in workflow "de.leenno.datecalculator" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_FONT_AWESOME</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "fontAwesome" in workflow "com.ruedap.font-awesome" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_DRIVE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchGoogleDrive" in workflow "com.drive.azai91" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DISPLAY_BRIGHTNESS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "displayBrightness" in workflow "com.fniephaus.brightness" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_PLAYLISTS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "spotifyPlaylists" in workflow "com.vdesabou.spotify.mini.player" with argument "✧Playlist▹"
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_MAILTO</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "mailTo" in workflow "net.deanishe.alfred-mailto" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchGithub" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INDEXED_GITHUB</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "jumpToGithubRepo" in workflow "me.lachlan.githubjump" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SHOW_CALENDAR</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "showCalendar" in workflow "zmin.calendar" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CONTACTS_TEXT</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchContactsText" in workflow "com.alfredapp.vero.contactnotes" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TIMEZONES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "timezonesSearch" in workflow "carlosnz.timezones" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CAN_I_USE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "canIUse" in workflow "com.farrell.caniuse.alfredworkflow" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TRANSLATE_EN_RU</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "translateEnglishRussian" in workflow "dmitry.traslate.ru.en" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_WORKFLOWS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchThroughAlfredExtensions" in workflow "com.jmjeong.alfredv2.mae" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAW_FILES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchPawFIles" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_XCODE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchXcodeProjects" in workflow "com.sindresorhus.xcode" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_IMAGES</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "google images" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_HASTEBIN</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "hastebinFromClipboard" in workflow "co.jmes.hastebin" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SYMBOLS_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "symbolsSearch" in workflow "pw.symbols-search" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_UNINSTALL_WITH_CLEANMYMAC</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "uninstallWithCleanMyMac" in workflow "fradser.uninstall.cleanmymac3" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
      <background/>
  <name>KeyCode::VK_OPEN_URL_ALFRED_RELOAD_KARABINER_XML</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "reloadKarabinerXML" in workflow "com.nikivi.karabiner" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_CLEAN_FOLDERS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "cleanFolders" in workflow "nikivi.clean.folders" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DICTIONARY_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "dictionarySearch" in workflow "nikivi.dictionary.lookup" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DISMISS_NOTIFICATIONS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "dismissNotifications" in workflow "shh" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_FORCE_EMPTY_TRASH</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "forceEmptyTrash" in workflow "com.renegaed.force-empty-trash" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_REDDIT</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchReddit" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_FORUM</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchAlfredForum" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_IDOPE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchIDOPE" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "snippetsLabSearch" in workflow "com.renfei.SnippetsLab.AlfredWorkflow" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_RECENT_DOWNLOADS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "recentDownloads" in workflow "recentdownloads.ddjfreedom" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_CURRENT_TRACK</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "spotifyCurrentTrack" in workflow "com.vdesabou.spotify.mini.player" with argument "✧Current Track▹"
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "spot_mini" in workflow "com.vdesabou.spotify.mini.player" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "keyboardMaestroSearch" in workflow "iansinnott.keyboardmaestro" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_NPM_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "npmSearch" in workflow "com.sindresorhus.npms" with argument ""
    '
  </url>
</vkopenurldef>


<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_GROUPS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "ulyssesGroups" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ITERM_SESSIONS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "itermSessions" in workflow "com.madvas.iterm-sessions" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "history" in workflow "net.deanishe.alfred.safari" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_VIEW_SAFARI_TABS</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "viewSafariTabs" in workflow "net.deanishe.alfred.safari" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WEATHER_TODAY</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "start" in workflow "com.jason0x43.alfred-weather" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_NEW_BITBAR_TASK</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "newBitBarTask" in workflow "nikivi.bitbar.create.task" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_ASK_CREATE_SHARE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "askCreateShare" in workflow "nikivi.ask.create.share" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchMindnode" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "searchPDF" in workflow "nikivi.search.files" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_FOLDERS</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchFolders" in workflow "nikivi.search-folders" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GITHUB</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "github" in workflow "de.gh01.alfred.github" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_KEYCLUE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "keyClue" in workflow "com.tedwise.menubarsearch" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_YOUTUBE_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "youtube" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "duckduckgo" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WIKI_SIMPLE_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "wiki simple" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_AMAZON_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "amazon" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_WIKI_SEARCH</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "wiki" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH</name>
  <url type="shell">
  osascript -e '
  tell application "Alfred 3" to run trigger "searchGoogleMaps" in workflow "nikivi.search-the-web" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_RESTART_WIFI</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "restartWifi" in workflow "nikivi.wifi.workflow" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_TOGGLE_WIFI</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "toggleWifi" in workflow "nikivi.wifi.workflow" with argument ""
    '
  </url>
</vkopenurldef>

<vkopenurldef>
  <name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE</name>
  <url type="shell">
  osascript -e '
tell application "Alfred 3" to run trigger "google" in workflow "net.deanishe.alfred-searchio" with argument ""
    '
  </url>
</vkopenurldef>

<!-- _language definitions -->
<inputsourcedef>
<name>US</name>
<inputsourceid_prefix>com.apple.keylayout.US</inputsourceid_prefix>
</inputsourcedef>

<inputsourcedef>
<name>RU</name>
<inputsourceid_prefix>com.apple.keylayout.RussianWin</inputsourceid_prefix>
</inputsourcedef>

<item>
<name>general: put {} () [] to a better place</name>
<identifier>private.brackets_around</identifier>
<inputsource_not>RU</inputsource_not>
<autogen>
__KeyToKey__
KeyCode::BACKSLASH, ModifierFlag::NONE,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::BACKQUOTE, ModifierFlag::NONE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::MINUS, ModifierFlag::SHIFT_L,
KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,
KeyCode::0, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
  <name>general: change colon to semicolon</name>
  <identifier>private.colon_to_semicolon</identifier>
<inputsource_not>RU</inputsource_not>
    <autogen>
    __KeyToKey__
    KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
    KeyCode::SEMICOLON,
    </autogen>
</item>

<item>
  <name>general: sticky semicolon - shift key</name>
<identifier>private.launcher_mode_open_apps_v30</identifier>
<inputsource_only>US</inputsource_only>


  <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
  <modifier_not>
    ModifierFlag::COMMAND_L,
    ModifierFlag::COMMAND_R,
    ModifierFlag::CONTROL_L,
    ModifierFlag::CONTROL_R,
    ModifierFlag::FN,
    ModifierFlag::OPTION_L,
    ModifierFlag::OPTION_R,
  </modifier_not>

  <autogen>
    __KeyOverlaidModifier__
    <!-- __KeyOverlaidModifier__ take 3 parameters -->
    <!-- 1st parameter define which key to trigger -->
    KeyCode::SEMICOLON,
    <!--
        Use notsave.launcher_mode_v2 in order to be higher priority.
        Use ModifierFlag::MY_LAUNCHER_MODE for __DropAllKeys__.
    -->
    <!-- 2nd parameter will run when held down -->
    @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v30, ModifierFlag::MY_LAUNCHER_MODE,
    @end
    <!-- 3rd parameter will run when tap, we did the key swap here -->
    @begin
      KeyCode::SEMICOLON, ModifierFlag::SHIFT_L
    @end
  </autogen>
</item>

<item hidden="true">
  <identifier vk_config="true">notsave.private_launcher_mode_v30</identifier>

  <autogen>
    __BlockUntilKeyUp__
    KeyCode::SEMICOLON,
  </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::1,
         KeyCode::1, ModifierFlag::CONTROL_L
     </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::2,
         KeyCode::2, ModifierFlag::CONTROL_L
     </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::3,
         KeyCode::3, ModifierFlag::CONTROL_L
     </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::4,
         KeyCode::4, ModifierFlag::CONTROL_L
     </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::5,
         KeyCode::5, ModifierFlag::CONTROL_L
     </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::COMMAND_R,
                 KeyCode::F11, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::COMMA,
    KeyCode::COMMA, ModifierFlag::SHIFT_L
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::COMMAND_L,
    KeyCode::CAPSLOCK
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::F19,
    KeyCode::CAPSLOCK
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::BACKQUOTE,
    KeyCode::CAPSLOCK
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::F6
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::DOT, ModifierFlag::SHIFT_L
		</autogen>

  <autogen>
    __KeyToKey__
    KeyCode::COMMAND_L,
    KeyCode::9, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::QUOTE,
    KeyCode::VK_OPEN_URL_KM_HIGHLIGHT_CURRENT_LINE
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::Q,
    KeyCode::Q, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::W,
    KeyCode::W, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::E,
    KeyCode::E, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::R,
    KeyCode::R, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::T,
    KeyCode::T, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::Y,
    KeyCode::Y, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::U,
    KeyCode::U, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::I,
    KeyCode::I, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::O,
    KeyCode::O, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::P,
    KeyCode::P, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::BRACKET_LEFT,
    KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::A,
    KeyCode::A, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::S,
    KeyCode::S, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::D,
    KeyCode::D, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::F,
    KeyCode::F, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::G,
    KeyCode::G, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::H,
    KeyCode::H, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::J,
    KeyCode::J, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::K,
    KeyCode::K, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::L,
    KeyCode::L, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::Z,
    KeyCode::Z, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::X,
    KeyCode::X, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::C,
    KeyCode::C, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::V,
    KeyCode::V, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::B,
    KeyCode::B, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::N,
    KeyCode::N, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::M,
    KeyCode::M, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::SLASH,
    KeyCode::SLASH, ModifierFlag::SHIFT_L
  </autogen>


  <autogen>
    __KeyToKey__
    KeyCode::SHIFT_L,
    KeyCode::SLASH, ModifierFlag::SHIFT_L
  </autogen>

</item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v71</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::SEMICOLON,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::B
    </autogen>

  </item>

<item>
  <name>general: hyper function semicolon key</name>
    <identifier>private.hyper.function.SEMICOLON.key</identifier>
    <inputsource_not>RU</inputsource_not>

    <autogen>
    __KeyToKey__
        KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
        KeyCode::SEMICOLON
    </autogen>

    <autogen>
      __HoldingKeyToKey__
      KeyCode::SEMICOLON,

      <!-- short press -->
      @begin
      KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
      @end

      <!-- hold -->
      @begin
      KeyCode::SHIFT_L
      @end

      Option::NOREPEAT,
    </autogen>
</item>

<item>
    <name>general: sticky s - essential things - NOT: iTerm</name>
    <identifier>private.launcher_mode_open_apps_v23</identifier>
    <not>ITERM</not>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::S,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v23, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::S,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v23</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::S,
    </autogen>

               <!-- send command-tab by m -->
               <autogen>
                 __KeyToKey__
                 KeyCode::G,
                 KeyCode::TAB, ModifierFlag::COMMAND_L,
                 <!-- release command key to commit command-tab -->
                 KeyCode::COMMAND_L,
             </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::SLASH,
               KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L
               </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::COMMA,
               KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
               </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::W,
               KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
               KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
               </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::SEMICOLON,
               KeyCode::MINUS,
               KeyCode::SPACE
               </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::T,
               KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_WORD
               </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::N,
                  KeyCode::V, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::BRACKET_LEFT,
                  KeyCode::F7
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::C,
                  KeyCode::DELETE, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                __KeyToKey__
                KeyCode::SHIFT_R,
                KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
                KeyCode::X, ModifierFlag::COMMAND_L,
                Option::NOREPEAT,
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::E,
                  KeyCode::TAB
                </autogen>

                <autogen>
              __KeyToKey__
              KeyCode::Y,
              KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
              __KeyToKey__
              KeyCode::U,
              KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::P,
                  KeyCode::F12, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::QUOTE,
                  KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
                  KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::SPACE,
                  KeyCode::SPACE
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::DOT,
                  KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_LINE
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::R,
                   KeyCode::TAB, ModifierFlag::SHIFT_L
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::F,
                   KeyCode::RETURN
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::A,
                   KeyCode::C, ModifierFlag::COMMAND_L
                </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::V,
                 KeyCode::SHIFT_L,
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::O,
                 KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L,
                 KeyCode::RETURN,
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::D,
                 KeyCode::DELETE
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::SHIFT_L,
                 KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L
              </autogen>


               <autogen>
                 __KeyToKey__
                 KeyCode::I,
                 KeyCode::SPACE, ModifierFlag::CONTROL_L
             </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::M,
                 KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::V | ModifierFlag::SHIFT_L,
                 KeyCode::T, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::B,
                 KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::Z,
                 KeyCode::Z, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::H,
                 KeyCode::CURSOR_LEFT
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::L,
                 KeyCode::CURSOR_RIGHT
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::K,
                 KeyCode::CURSOR_UP
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::J,
                 KeyCode::CURSOR_DOWN
               </autogen>

                <autogen>
              __KeyToKey__
              KeyCode::BACKQUOTE,
              KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L
                </autogen>

  </item>

<item>
    <name>general: sticky s - essential things - ONLY: iTerm</name>
    <identifier>private.launcher_mode_open_apps_v25</identifier>
    <only>ITERM</only>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::S,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v25, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::S,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v25</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::S,
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::BACKQUOTE,
                 KeyCode::VK_OPEN_URL_KM_ITERM_SNIPPET_FROM_SELECTION
               </autogen>

               <!-- send command-tab by m -->
               <autogen>
                 __KeyToKey__
                 KeyCode::G,
                 KeyCode::TAB, ModifierFlag::COMMAND_L,
                 <!-- release command key to commit command-tab -->
                 KeyCode::COMMAND_L,
             </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::A,
                 KeyCode::C, ModifierFlag::COMMAND_L
               </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::N,
                  KeyCode::V, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::BRACKET_LEFT,
                  KeyCode::F7
                </autogen>

               <autogen>
               __KeyToKey__
               KeyCode::SEMICOLON,
               KeyCode::MINUS,
               KeyCode::SPACE
               </autogen>

                <autogen>
                __KeyToKey__
                KeyCode::SHIFT_R,
                KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
                KeyCode::X, ModifierFlag::COMMAND_L,
                Option::NOREPEAT,
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::E,
                  KeyCode::TAB
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::U,
                  KeyCode::F12, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::P,
                  KeyCode::J, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::QUOTE,
                  KeyCode::F6, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L
                </autogen>

                <autogen>
                  __KeyToKey__
                  KeyCode::DOT,
                  KeyCode::D,
                  KeyCode::D
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::R,
                   KeyCode::V, ModifierFlag::COMMAND_L
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::F,
                   KeyCode::RETURN
                </autogen>

               <autogen>
                   __KeyToKey__
                   KeyCode::A,
                   KeyCode::C, ModifierFlag::COMMAND_L
                </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::V,
                 KeyCode::SHIFT_L,
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::O,
                 KeyCode::VK_OPEN_URL_KM_ITERM_START_NEXT_LINE
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::D,
                 KeyCode::DELETE
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::SHIFT_L,
                 KeyCode::F10, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::I,
                 KeyCode::SPACE, ModifierFlag::CONTROL_L
             </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::M,
                 KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::V | ModifierFlag::SHIFT_L,
                 KeyCode::T, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::B,
                 KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::Z,
                 KeyCode::Z, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::H,
                 KeyCode::CURSOR_LEFT
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::L,
                 KeyCode::CURSOR_RIGHT
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::K,
                 KeyCode::CURSOR_UP
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::J,
                 KeyCode::CURSOR_DOWN
               </autogen>
  </item>

  <!-- sticky d for mouse movement  -->
  <replacementdef>
    <replacementname>MOUSE_KEYS_MODE_2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[

               <autogen>__KeyToKey__ KeyCode::Z, PointingButton::RIGHT,  ModifierFlag::MOUSE_KEYS_MODE_2</autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::COMMA,
                 KeyCode::F2, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::C,
                 KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::SEMICOLON,
                 KeyCode::4, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::W,
                 KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::Q,
                 KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::E,
                 KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TOP_MIDDLE
               </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BACKQUOTE,
      KeyCode::1, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::2, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::G,
                 KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::SHIFT_L,
                 KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::O,
                 KeyCode::EQUAL, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::BACKQUOTE,
                 KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::SPACE,
                 KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::I,
                 KeyCode::MINUS, ModifierFlag::COMMAND_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::A,
                 KeyCode::F11, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::U,
                 KeyCode::VK_OPEN_URL_HAMMERSPOON_VISUALLY_CIRCLE_MOUSE
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::DOT,
                 KeyCode::F1, ModifierFlag::COMMAND_L
               </autogen>


               ]]>
    </replacementvalue>
  </replacementdef>

  <modifierdef>MY_LAUNCHER_MODE</modifierdef>


  <!-- sticky o  -->
  <replacementdef>
    <replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::VK_OPEN_URL_KM_TEST
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::TAB,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SKETCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::VK_OPEN_URL_ALFRED_WATCH_TRASH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_ALFRED_WATCH_DROPBOX_SHARES
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::S,
          KeyCode::VK_OPEN_URL_ALFRED_PLAY_DIR_WATCH
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::B,
          KeyCode::VK_OPEN_URL_ALFRED_PINBOARD
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::BACKQUOTE,
          KeyCode::VK_OPEN_URL_SEARCH_TEX_FILES
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SPACE,
          KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_SHEETS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::F,
          KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::C,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALL_FILES
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::J,
          KeyCode::K, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::R,
          KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::F19,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_FOLDERS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::Q,
          KeyCode::VK_OPEN_URL_ALFRED_RECENT_DOWNLOADS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::E,
      KeyCode::F9, ModifierFlag::OPTION_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::COMMAND_L,
       KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_GROUPS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::M,
       KeyCode::VK_OPEN_URL_ALFRED_TRANSMIT
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::1,
       KeyCode::1, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::2,
       KeyCode::2, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::3,
       KeyCode::3, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::4,
       KeyCode::4, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::5,
       KeyCode::5, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::6,
       KeyCode::6, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::7,
       KeyCode::7, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::8,
       KeyCode::8, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::9,
       KeyCode::9, ModifierFlag::COMMAND_L
        </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::F7, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::VK_OPEN_URL_ALFRED_FILTER_KNOWLEDGE_WIKI_FOLDERS
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::D,
          KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_DIR_WATCH
        </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::BACKSLASH, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::VK_OPEN_URL_ALFRED_CLEAN_FOLDERS
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::VK_OPEN_URL_ALFRED_SEARH_MARKDOWN_WIKI
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::TAB,
       KeyCode::TAB, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::X,
       KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_WORKFLOWS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::I,
       KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SHIFT_L,
       KeyCode::TAB, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::P,
       KeyCode::F2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SEMICOLON,
       KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::T,
       KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_READ
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::2,
       KeyCode::2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::4,
       KeyCode::4, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::3,
       KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::COMMAND_R,
       KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::H,
       KeyCode::VK_OPEN_URL_ALFRED_HACKER_NEWS
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::P,
       KeyCode::F7, ModifierFlag::OPTION_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::G,
       KeyCode::VK_OPEN_URL_ALFRED_PROCESS_CONTROL
        </autogen>

      ]]>
    </replacementvalue>
  </replacementdef>


<item>
    <name>general: sticky slash - websites</name>
    <identifier>private.launcher_mode_open_apps_v19</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SLASH,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v19, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::SLASH
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v19</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::SLASH,
    </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::R,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REPL
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::A,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::D,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_DROPBOX
      </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_UNSPLASH
    </autogen>

  </item>

<item>
		<name>general: sticky space - km palettes</name>
		<identifier>private.launcher_mode_open_apps_v34</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SPACE,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v34, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::SPACE,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v34</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::SPACE,
    </autogen>
    
        <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::SEMICOLON, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::J, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::H, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::G, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>
    
        <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::F, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::K, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::A, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::U, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::P, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::T, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::1, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::L, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::F9, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::Q, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::C, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, 
		</autogen>
        
        <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::V, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::Z, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, 
		</autogen>
        
        <autogen>
      __KeyToKey__
      KeyCode::W,
    KeyCode::5, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Q,
    KeyCode::W, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::J,
KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI
		</autogen>

  </item>

<item>
    <name>general: sticky 0 - alfred</name>
    <identifier>private.launcher_mode_open_apps_v82</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::0,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v82, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::0
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v82</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::0,
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::C,
         KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES
       </autogen>

  </item>

<item>
    <name>general: sticky left bracket - alfred</name>
    <identifier>private.launcher_mode_open_apps_v75</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::BRACKET_LEFT,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v75, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::BRACKET_LEFT
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v75</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::BRACKET_LEFT,
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::V,
         KeyCode::VK_OPEN_URL_AFRED_GET_APP_VERSION
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::T,
         KeyCode::VK_OPEN_URL_KM_LAST_N_MACROS_EXECUTED
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::M,
         KeyCode::VK_OPEN_URL_ALFRED_TIME
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::B,
         KeyCode::VK_OPEN_URL_ALFRED_GUTENBERG
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::P,
         KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES
       </autogen>
    
    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::VK_OPEN_URL_ALFRED_WEATHER_TODAY
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::H,
         KeyCode::VK_OPEN_URL_ALFRED_HTTP_CODES
       </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::VK_OPEN_URL_ALFRED_CHEATSHEET
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::N,
         KeyCode::VK_OPEN_URL_ALFRED_SYNONYMS_SEARCH
       </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAGES
    </autogen>


       <autogen>
         __KeyToKey__
         KeyCode::F19,
         KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SOULVER
       </autogen>

  </item>

<item>
    <name>general: sticky p - scroll + symbols</name>
    <identifier>private.launcher_mode_open_apps_v12</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::P,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v12, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::P,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v12</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::P,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::U, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
		</autogen>


        <autogen>
      __KeyToKey__
      KeyCode::TAB,
      KeyCode::VK_OPEN_URL_KM_INSERT_BACKQUOTES_AND_CLIP
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Q,
      KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::DOT,
      KeyCode::SLASH
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::0, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::5, ModifierFlag::SHIFT_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::T, ModifierFlag::SHIFT_L, 
      KeyCode::O, ModifierFlag::SHIFT_L, 
      KeyCode::D, ModifierFlag::SHIFT_L, 
      KeyCode::O, ModifierFlag::SHIFT_L, 
      KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, 
      KeyCode::SPACE,
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::1,
        KeyCode::VK_OPEN_URL_KM_F1
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::2,
        KeyCode::VK_OPEN_URL_KM_F2
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::3,
        KeyCode::VK_OPEN_URL_KM_F3
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
        KeyCode::VK_OPEN_URL_KM_F4
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::5,
        KeyCode::VK_OPEN_URL_KM_F5
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::6,
        KeyCode::VK_OPEN_URL_KM_F6
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::7,
        KeyCode::VK_OPEN_URL_KM_F7
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::I,
                 KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center
               </autogen>

       <autogen>__KeyToKey__ KeyCode::O, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::MOUSE_KEYS_MODE_2</autogen>

             <!-- scroll -->
        <autogen>
          __KeyToKey__
          {{ VI_H }},
          KeyCode::VK_MOUSEKEY_SCROLL_LEFT, ModifierFlag::MOUSE_KEYS_MODE_2,
        </autogen>

        <autogen>
          __KeyToKey__
          {{ VI_J }},
          KeyCode::VK_MOUSEKEY_SCROLL_DOWN, ModifierFlag::MOUSE_KEYS_MODE_2,
        </autogen>
        <autogen>
          __KeyToKey__
          {{ VI_K }},
          KeyCode::VK_MOUSEKEY_SCROLL_UP, ModifierFlag::MOUSE_KEYS_MODE_2,
        </autogen>
        <autogen>
          __KeyToKey__
          {{ VI_L }},
          KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::MOUSE_KEYS_MODE_2,
           </autogen>

  </item>

<item>
		<name>general: sticky c - websites</name>
		<identifier>private.launcher_mode_open_apps_v41</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::C,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v41, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::C,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v41</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::C,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::1,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_MAIL
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SHIFT_L,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITTER
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::3,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE_AUTOPLAY
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRAW
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::E,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOCALHOST
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEARN_ANYTHING
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_ANALYTICS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::8,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LICHESS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_R,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_TOP_NEW
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::U,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REGEX101
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::QUOTE,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_TRENDING
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::0,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_KM_FORUM
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::9,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_ALFRED_FORUM
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DANISH_DOLLAR,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::TAB,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_REAL_TIME
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::B,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::2,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_COURSERA
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_MIT_COURSES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Z,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEETCODE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEPEN
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::P,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_PRODUCT_HUNT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMA,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS_NEW
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOUNDCLOUD
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA_ANSWER
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::VK_OPEN_URL_KM_MINDNODE_SCREENSHOT_TABBED
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BACKQUOTE,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GO_PLAYGROUND
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::VK_OPEN_URL_KM_GODOC
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_IMGUR
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_FRONT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_HCKR_NEWS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_OVERFLOW
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Q,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRIBBLE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_ALL_NOTIFICATIONS
    </autogen>

  </item>

<item>
    <name>go: sticky comma</name>
    <identifier>private.launcher_mode_open_apps_v72</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::COMMA,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v72, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::COMMA,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v72</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::COMMA,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::VK_OPEN_URL_SHELL_switchprofile_python
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::VK_OPEN_URL_KM_INSERT_FMT_PRINTLN
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_INSERT_LOG_PRINTLN
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::VK_OPEN_URL_KM_INSERT_WORKFLOW:
		</autogen>

  </item>

<item>
    <name>python: sticky comma</name>
    <identifier>private.launcher_mode_open_apps_v77</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::COMMA,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v77, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::COMMA,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v77</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::COMMA,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::VK_OPEN_URL_SHELL_switchprofile_general
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::R,
      KeyCode::E,
      KeyCode::T,
      KeyCode::U,
      KeyCode::R,
      KeyCode::N,
      KeyCode::SPACE,
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::P,
      KeyCode::R,
      KeyCode::I,
      KeyCode::N,
      KeyCode::T,
      KeyCode::9, ModifierFlag::SHIFT_L, 
      KeyCode::0, ModifierFlag::SHIFT_L, 
      KeyCode::CURSOR_LEFT
		</autogen>
  </item>


<item>
    <name>general: sticky dot - one off scripts</name>
    <identifier>private.launcher_mode_open_apps_v20</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::DOT,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v20, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::DOT,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v20</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::DOT,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::X,
      KeyCode::VK_OPEN_URL_ALFRED_CURL_URL
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::BACKQUOTE,
      KeyCode::VK_OPEN_URL_KM_DUCKDUCKGO_CLIPBOARD
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_COMMIT_WIKI_WITH_SPARKLES
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::VK_OPEN_URL_HAMMERSPOON_TESTER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::VK_OPEN_URL_KM_LIKE_AND_SAVE_CURRENT_UNSPLASH_WALLPAPER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::VK_OPEN_URL_ALFRED_TOGGLE_WIFI
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::VK_OPEN_URL_KM_GOOGLE_CLIPBOARD
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::VK_OPEN_URL_ALFRED_WIFI_CHECK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::E,
       KeyCode::VK_OPEN_URL_ALFRED_RESTART_WIFI
    </autogen>


  </item>

<item>
    <name>general: sticky n - web searches</name>
    <identifier>private.launcher_mode_open_apps_v35</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::N,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v35, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::N,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v35</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::N,
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::F19,
         KeyCode::VK_OPEN_URL_ALFRED_COMMIT_FOLDERS
       </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_STACK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::TAB,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TWITTER
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Q,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_QUORA
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_HACKER_NEWS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MEDIUM
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::T,
        KeyCode::VK_OPEN_URL_ALFRED_TRANSLATE_EN_RU
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::VK_OPEN_URL_ALFRED_YANDEX_SEARCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BACKQUOTE,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_IDOPE
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MY_GITBOOKS_WIKI
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SUBREDDITS
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GODOC
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_ALFRED_WEB_SEARCHES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Z,
        KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INDEXED_GITHUB
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_APPLE_MAPS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
          KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::VK_OPEN_URL_ALFRED_SEARCH_REDDIT
    </autogen>

   <autogen>
     __KeyToKey__
     KeyCode::A,
     KeyCode::VK_OPEN_URL_ALFRED_SEARCH_WOLFRAM_ALPHA
 </autogen>

  </item>

<item>
    <name>general: sticky m - productivity</name>
    <identifier>private.launcher_mode_open_apps_v17</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::M,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v17, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::M,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v17</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::M,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::VK_OPEN_URL_TIMER_10
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::VK_OPEN_URL_TIMER_20
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::VK_OPEN_URL_TIMER_30
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::4,
      KeyCode::VK_OPEN_URL_TIMER_40
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::5,
      KeyCode::VK_OPEN_URL_TIMER_50
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BACKQUOTE,
      KeyCode::VK_OPEN_URL_TIMER_60
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::C,
    KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SHOW_QUEUE
  </autogen>
  
    <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_DISPLAY_SONG
    </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::X,
    KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_CURRENT_SONG
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::R,
    KeyCode::VK_OPEN_URL_KM_FOCUS_60_MIN
  </autoge>

  <autogen>
    __KeyToKey__
    KeyCode::K,
    KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_OPEN_LYRICS
  </autoge>

  <autogen>
    __KeyToKey__
    KeyCode::Y,
    KeyCode::VK_OPEN_URL_ALFRED_CREATE_ARTIST_RADIO
  </autoge>

  <autogen>
    __KeyToKey__
    KeyCode::Q,
    KeyCode::VK_OPEN_URL_ALFRED_WATCH_SPOTIFY_LIKES
  </autogen>


  <autogen>
    __KeyToKey__
    KeyCode::G,
    KeyCode::VK_OPEN_URL_ALFRED_ADD_SONG_SPOTIFY
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::V,
    KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_PLAYLISTS
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::F19,
    KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::E,
    KeyCode::VK_OPEN_URL_ALFRED_TIMER_VIEW
  </autogen>


  <autogen>
    __KeyToKey__
    KeyCode::W,
    KeyCode::VK_OPEN_URL_ALFRED_TIMER_START
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::SEMICOLON,
    KeyCode::VK_OPEN_URL_ALFRED_UNINSTALL_WITH_CLEANMYMAC
  </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::D,
         KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_CURRENT_TRACK
     </autogen>

       <autogen>
         __KeyToKey__
        KeyCode::S,
    KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN
     </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::A,
         KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TODO_TASK
     </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::L,
         KeyCode::VK_OPEN_URL_ALFRED_ACTIVATE_FOCUS
     </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::VK_OPEN_URL_ALFRED_NEW_BITBAR_TASK
		</autogen>


        <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST
		</autogen>

  </item>

<item>
    <name>general: sticky v - media controls</name>
    <identifier>private.launcher_mode_open_apps_v16</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::V,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v16, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::V,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v16</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::V,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::V, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::M, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

     <autogen>
      __KeyToKey__
      KeyCode::COMMAND_L,
      KeyCode::I, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SLASH,
      KeyCode::VK_OPEN_URL_ALFRED_PLAY_MY_LIKES_PLAYLIST
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::QUOTE,
      KeyCode::VK_OPEN_URL_ALFRED_PLAY_MY_LIKES_PLAYLIST
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SEMICOLON,
       KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN
        </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::L,
      ConsumerKeyCode::MUSIC_NEXT
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_MINDNODE
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::W,
       KeyCode::VK_OPEN_URL_ALFRED_PLAY_ARTIST_OF_SONG
        </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::H,
      ConsumerKeyCode::MUSIC_PREV
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        ConsumerKeyCode::MUSIC_PLAY
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::1,
       KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        ConsumerKeyCode::VOLUME_MUTE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        ConsumerKeyCode::BRIGHTNESS_UP
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        ConsumerKeyCode::BRIGHTNESS_DOWN
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        ConsumerKeyCode::VOLUME_UP
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        ConsumerKeyCode::VOLUME_DOWN
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        ConsumerKeyCode::KEYBOARDLIGHT_OFF
    </autogen>

     <autogen>
        __KeyToKey__
        KeyCode::BACKQUOTE,
        ConsumerKeyCode::KEYBOARDLIGHT_LOW,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        ConsumerKeyCode::KEYBOARDLIGHT_HIGH
    </autogen>

  </item>

<item>
    <name>general: sticky [ - more maps</name>
    <identifier>private.launcher_mode_open_apps_v73</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
    <autogen>
        __KeyToKey__
        KeyCode::S,
    </autogen>
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::BRACKET_LEFT,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v73, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
        KeyCode::9, ModifierFlag::SHIFT_L
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v73</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::BRACKET_LEFT,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Q,
        KeyCode::Q, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::W, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::E,
        KeyCode::E, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::R, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::T,
        KeyCode::T, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::Y, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::U,
        KeyCode::U, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::I, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::O, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::P,
        KeyCode::P, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F,
        KeyCode::F, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::H, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::J, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::K, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON,
        KeyCode::SEMICOLON, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Z,
        KeyCode::Z, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::X,
        KeyCode::X, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::C, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::V, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::B,
        KeyCode::B, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::N, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::M, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, 
    </autogen>

  </item>

<item>
    <name>general: sticky b - maps</name>
    <identifier>private.launcher_mode_open_apps_v13</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
    <autogen>
        __KeyToKey__
        KeyCode::S,
    </autogen>
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::B,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v13, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::B,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v13</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::B,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
        KeyCode::Y, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::EQUAL,
        KeyCode::EQUAL, ModifierFlag::OPTION_L
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::O, ModifierFlag::OPTION_L
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::I, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::5,
        KeyCode::5, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
        KeyCode::4, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Q,
        KeyCode::Q, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::W, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::E,
        KeyCode::E, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::R, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::T,
        KeyCode::T, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::Y, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::U,
        KeyCode::U, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::I, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::O, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::P,
        KeyCode::P, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT,
        KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT,
        KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::A, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::S, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::D, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F,
        KeyCode::F, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::9,
        KeyCode::9, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::3,
        KeyCode::3, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::2,
        KeyCode::2, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::G, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::H, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::J, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BACKSLASH,
        KeyCode::BACKSLASH, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::MINUS,
        KeyCode::MINUS, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::0,
        KeyCode::0, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::K, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::L, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON,
        KeyCode::SEMICOLON, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::QUOTE,
        KeyCode::QUOTE, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Z,
        KeyCode::Z, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::X,
        KeyCode::X, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::C, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::V, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::B,
        KeyCode::B, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::N, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::M, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMA,
        KeyCode::COMMA, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::DOT, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SLASH,
        KeyCode::SLASH, ModifierFlag::OPTION_L
    </autogen>

  </item>

<item>
    <name>general: sticky w - open top apps</name>
    <identifier>private.launcher_mode_open_apps_v3</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::W,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v3, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::W,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v3</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::W,
    </autogen>
    
 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI_TECHNOLOGY_PREVIEW
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::VK_OPEN_URL_KM_OPEN_PAW
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::VK_OPEN_URL_KM_OPEN_CONSOLE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMIT
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::VK_OPEN_URL_KM_OPEN_DR_RACKET
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
      KeyCode::VK_OPEN_URL_KM_OPEN_ACTIVITY_MONITOR
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::5,
      KeyCode::VK_OPEN_URL_KM_OPEN_ACTIVITY_MONITOR
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::VK_OPEN_URL_KM_OPEN_CHROME
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::VK_OPEN_URL_KM_OPEN_SHIP
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::VK_OPEN_URL_KM_OPEN_BETTERTOUCHTOOL
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::VK_OPEN_URL_KM_OPEN_SKETCH
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::VK_OPEN_URL_KM_OPEN_FINDER
		</autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::T,
        KeyCode::VK_OPEN_URL_KM_OPEN_FANTASTICAL
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::VK_OPEN_URL_KM_OPEN_DICTIONARY
		</autogen>

    <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::VK_OPEN_URL_KM_OPEN_MINDNODE
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_OPEN_SNIPPETSLAB
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::VK_OPEN_URL_KM_OPEN_SPOTIFY
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::VK_OPEN_URL_KM_OPEN_2DO
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BACKQUOTE,
      KeyCode::VK_OPEN_URL_KM_OPEN_PAW
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::7, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::VK_OPEN_URL_KM_OPEN_ITERM
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::1, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::VK_OPEN_URL_KM_OPEN_SUBLIME_TEXT
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::VK_OPEN_URL_KM_OPEN_VS_CODE
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::VK_OPEN_URL_KM_OPEN_KEYBOARD_MAESTRO
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::VK_OPEN_URL_KM_OPEN_TOWER
    </autogen>
  </item>

<item>
    <name>general: sticky quote - websites</name>
    <identifier>private.launcher_mode_open_apps_v32</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::QUOTE,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v32, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::QUOTE,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v32</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::QUOTE,
    </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::B,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_BRILLIANT
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::D,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD
      </autogen>

  </item>

<item>
		<name>general: sticky x - alfred my mind</name>
		<identifier>private.launcher_mode_open_apps_v43</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::X,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v43, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::X,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v43</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::X,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::P,
        KeyCode::VK_OPEN_URL_ALFRED_REDDIT_MULTI_MIND
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_RECENT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::QUOTE,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT_USERS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::0,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_GITTER
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::E,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_CODEPEN
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMA,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_QUORA
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::G,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_GISTS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_ARTICLES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_RESEARCH_PAPERS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_PODCASTS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_IMAGES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Y,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_YOUTUBE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_SLACK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::9,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_CLI
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_STACK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_MUSIC_PLAYLISTS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::T,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_TWITTER
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_NOTES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::B,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_BLOGS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_COURSES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_NOTES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_WEB
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_CLI
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SLASH,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_PERSONAL
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::U,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_GITHUB_USERS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_PROFILES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_BOOKS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::VK_OPEN_URL_ALFRED_CSS_COOKBOOK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::B, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON,
        KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
        KeyCode::5, ModifierFlag::SHIFT_L,
        KeyCode::S,
        KeyCode::SLASH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::VK_OPEN_URL_ALFRED_DATE_CALCULATOR
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::VK_OPEN_URL_ALFRED_LOREM_IPSUM
    </autogen>


        <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::VK_OPEN_URL_ALFRED_CLEAN_FOLDERS
		</autogen>


  </item>

<item>
    <name>general: sticky 1 - ⌥ + ⌘ + ⌃</name>
		<identifier>private.launcher_mode_open_apps_v80</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::1,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v80, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::1,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v80</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::1,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::Z, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, 
    </autogen>
    
        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
        KeyCode::N, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, 
        </autogen>

  </item>


<item>
		<name>general: sticky 2 - moving more</name>
		<identifier>private.launcher_mode_open_apps_v93</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::2,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v93, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::2,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v93</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::2,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::CURSOR_UP, ModifierFlag::OPTION_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, 
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::F,
                 KeyCode::SHIFT_L,
               </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::O,
        KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::M,
        KeyCode::K, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
          KeyCode::0, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
        </autogen>

  </item>

<item>
		<name>general: sticky tab - chrome</name>
		<identifier>private.launcher_mode_open_apps_v55</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::TAB,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v55, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::TAB,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v55</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::TAB,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SEMICOLON,
          KeyCode::VK_OPEN_URL_KM_GET_CURRENT_CHROME_URL
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::O,
          KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_CANVAS
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::K,
          KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_FACEBOOK
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::I,
          KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_3000
        </autogen>


    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, 
    </autogen>

  </item>

<item>
		<name>general: sticky 5 - something</name>
		<identifier>private.launcher_mode_open_apps_v54</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::5,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v54, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::5,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v54</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::5,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
        KeyCode::Y, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
        </autogen>

  </item>

<item>
    <name>general: sticky 4 - paths</name>
		<identifier>private.launcher_mode_open_apps_v53</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::4,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v53, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::4,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v53</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::4,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::M,
        KeyCode::VK_OPEN_URL_KM_OPEN_HOME_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::COMMA,
        KeyCode::VK_OPEN_URL_KM_OPEN_APPLICATIONS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::Y,
        KeyCode::VK_OPEN_URL_KM_OPEN_APP_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::DOT,
        KeyCode::VK_OPEN_URL_KM_OPEN_ROOT_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::H,
        KeyCode::VK_OPEN_URL_KM_OPEN_GO_SRC_GITHUB
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::F,
        KeyCode::VK_OPEN_URL_KM_OPEN_PDFS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::U,
        KeyCode::VK_OPEN_URL_KM_OPEN_UNI_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::L,
        KeyCode::VK_OPEN_URL_KM_OPEN_XCODE_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::I,
        KeyCode::VK_OPEN_URL_KM_OPEN_IDEAS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::P,
        KeyCode::VK_OPEN_URL_KM_OPEN_PAPERS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::J,
          KeyCode::VK_OPEN_URL_KM_OPEN_LEARNING_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SEMICOLON,
        KeyCode::VK_OPEN_URL_KM_OPEN_DROPBOX_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::QUOTE,
        KeyCode::VK_OPEN_URL_KM_OPEN_OSS_LA_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::N,
        KeyCode::VK_OPEN_URL_KM_OPEN_OSS_NIKIVI_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::S,
        KeyCode::VK_OPEN_URL_KM_OPEN_OSS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::G,
        KeyCode::VK_OPEN_URL_KM_OPEN_GOPATH_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::A,
        KeyCode::VK_OPEN_URL_KM_OPEN_DOTFILES_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::T,
        KeyCode::VK_OPEN_URL_KM_OPEN_APPLICATION_SUPPORT_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::B,
        KeyCode::VK_OPEN_URL_KM_OPEN_BOOKS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::K,
        KeyCode::VK_OPEN_URL_KM_OPEN_PROJECTS_PATH
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::O,
        KeyCode::VK_OPEN_URL_KM_OPEN_DOCUMENTS_PATH
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::F1, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>


  </item>

<item>
    <name>general: sticky 3 - ⇧ + ⌃ + ⌥</name>
		<identifier>private.launcher_mode_open_apps_v51</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::3,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v51, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::3,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v51</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::3,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::F19,
          KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_DAYONE
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SPACE,
          KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
        </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Q,
      KeyCode::Q, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::COMMA, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::W, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::E, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::R, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::T, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::Y, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::I, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::O, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::P,
      KeyCode::P, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::A, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::D, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>
    
    <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::F, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::G, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::H, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::J, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::K, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::SEMICOLON, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::Z, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::X,
      KeyCode::X, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::C, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::V, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::V, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::B, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::N, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::M, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

  </item>

<item>
		<name>general: sticky g - wm</name>
		<identifier>private.launcher_mode_open_apps_v11</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::G,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v11, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::G,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v11</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::G,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::P, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::U, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::I, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::4,
      KeyCode::O, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TIME
		</autogen>

           <autogen>
           __KeyToKey__
           KeyCode::SPACE,
       KeyCode::B, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
            </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::F4, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Q,
      KeyCode::6, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::M, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::4, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
		</autogen>

    <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::E,
       KeyCode::W, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
        </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::5, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::6, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TIME
    </autogenVK>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::DOT,
        KeyCode::SLASH
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, 
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::QUOTE,
       KeyCode::F10, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::I,
       KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_CLIPBOARD_CONTENT
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::F12, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
    </autogen>


    <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, 
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::P,
      KeyCode::DOT,
      KeyCode::SLASH
		</autogen>


            <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
		</autogen>

    <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::F, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_ALFRED_DISMISS_NOTIFICATIONS
    </autogen>

  </item>

<item>
    <name>general: sticky r - open other apps</name>
    <identifier>private.launcher_mode_open_apps_v8</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::R,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v8, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::R,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v8</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::R,
    </autogen>


            <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, 
    </autogen>


    <autogen>
        __KeyToKey__
        KeyCode::1,
        KeyCode::VK_OPEN_URL_KM_OPEN_HAZEL
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::D,
        KeyCode::VK_OPEN_URL_KM_OPEN_NOTES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
        KeyCode::VK_OPEN_URL_KM_OPEN_MAPS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::TAB,
        KeyCode::VK_OPEN_URL_KM_OPEN_FLUME
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_PREFERENCES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::Q,
        KeyCode::VK_OPEN_URL_KM_OPEN_IINA
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMISSION
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::VK_OPEN_URL_KM_OPEN_PAPRIKA_RECIPE_MANAGER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::VK_OPEN_URL_KM_OPEN_CONTACTS
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::VK_OPEN_URL_KM_OPEN_YNAB
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::VK_OPEN_URL_KM_EDIT_KEYBOARD_SHORTCUTS
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::VK_OPEN_URL_KM_OPEN_SONIC_PI
    </autogen>


        <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_OPEN_SPOTIFY
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_R,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_SCREENFLOW
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMA,
        KeyCode::VK_OPEN_URL_KM_OPEN_AFFINITY_PHOTO
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::VK_OPEN_URL_KM_OPEN_TEXPAD
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::P,
      KeyCode::VK_OPEN_URL_KM_OPEN_PAGES
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::VK_OPEN_URL_KM_OPEN_SOULVER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::VK_OPEN_URL_KM_OPEN_BETTERTOUCHTOOL
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::S,
        KeyCode::VK_OPEN_URL_KM_OPEN_ITUNES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::VK_OPEN_URL_KM_OPEN_ALFRED_PREFERENCES
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::VK_OPEN_URL_KM_OPEN_ANKI
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::VK_OPEN_URL_KM_OPEN_PIXELMATOR
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::VK_OPEN_URL_KM_OPEN_REEDER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::VK_OPEN_URL_KM_OPEN_MACDOWN
		</autogen>

    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::F10, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::VK_OPEN_URL_KM_OPEN_PDF_EXPERT
		</autogen>

    <autogen>
      __KeyToKey__
     KeyCode::W,
      KeyCode::VK_OPEN_URL_KM_OPEN_1PASSWORD
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::VK_OPEN_URL_KM_OPEN_DAY_ONE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::VK_OPEN_URL_KM_OPEN_TIMING
		</autogen>

  </item>

<item>
    <name>general: sticky u - websites</name>
    <identifier>private.launcher_mode_open_apps_v33</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::U,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v33, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::U,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v33</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::U,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::1,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::C,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEWARS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::A,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::B,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITBOOKS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DRIVE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::H,
        KeyCode::VK_OPEN_URL_KM_OPEN_URL_KHAN_ACADEMY
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_SAFARI
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_TRENDING
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_NETLIFY
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_MEDIUM
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_WAKATIME
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_AWS
    </autogen>

   <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM
    </autogen>


  </item>

<item>
    <name>general: sticky i - inserting symbols</name>
    <identifier>private.launcher_mode_open_apps_v15</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::I,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v15, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::I,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v15</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::I,
    </autogen>

<autogen>
    __KeyToKey__
    KeyCode::9,
    KeyCode::BRACKET_RIGHT
  </autogen>

<autogen>
    __KeyToKey__
    KeyCode::0,
    KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L, 
  </autogen>

<autogen>
    __KeyToKey__
    KeyCode::P,
    KeyCode::BRACKET_RIGHT
  </autogen>

<autogen>
    __KeyToKey__
    KeyCode::P,
    KeyCode::BRACKET_RIGHT
  </autogen>

<autogen>
    __KeyToKey__
    KeyCode::BRACKET_LEFT,
    KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L, 
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::DOT,
    KeyCode::DOT, ModifierFlag::SHIFT_L, 
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::M,
    KeyCode::EQUAL,
    KeyCode::DOT, ModifierFlag::SHIFT_L,
    KeyCode::SPACE
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::COMMAND_R,
    KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L,
    KeyCode::C,
    KeyCode::L,
    KeyCode::I,
    KeyCode::P,
    KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::Y,
    KeyCode::DOT,
    KeyCode::SLASH
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::U,
    KeyCode::4, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::G,
    KeyCode::4, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::B,
    KeyCode::6, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::6,
    KeyCode::6, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::BACKQUOTE,
    KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::N,
    KeyCode::MINUS,
    KeyCode::DOT, ModifierFlag::SHIFT_L,
    KeyCode::SPACE
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::Q,
    KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::O,
    KeyCode::BRACKET_LEFT
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::J,
    KeyCode::EQUAL
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::L,
    KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
    KeyCode::EQUAL,
    KeyCode::SPACE
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::5,
    KeyCode::5, ModifierFlag::SHIFT_L
  </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::MINUS
		</autogen>

  <autogen>
    __KeyToKey__
    KeyCode::J,
    KeyCode::EQUAL
  </autogen>

  <autogen>
    __KeyToKey__
    KeyCode::E,
    KeyCode::3, ModifierFlag::SHIFT_L
  </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::2, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::1, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::X,
      KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::MINUS, ModifierFlag::SHIFT_L
		</autogen>

  <autogen>
    __KeyToKey__
    KeyCode::F19,
    KeyCode::VK_OPEN_URL_KM_MATCH_SYMBOLS
</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::9, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::TAB,
      KeyCode::BACKQUOTE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::4,
      KeyCode::8, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SHIFT_L,
      KeyCode::6,  ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::SEMICOLON
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::QUOTE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::QUOTE, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::BACKSLASH
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::4, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::SLASH
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::SLASH, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::X,
      KeyCode::X, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::7, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::COMMAND_L,
      KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L,
      KeyCode::6, ModifierFlag::SHIFT_L,
      KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::COMMA, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::M, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::EQUAL, ModifierFlag::SHIFT_L
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::SLASH,
      KeyCode::SLASH,
      KeyCode::SPACE
		</autogen>
  </item>

<item>
    <name>general: sticky t - handy actions</name>
    <identifier>private.launcher_mode_open_apps_v14</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::T,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v14, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::T,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v14</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::T,
    </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::M,
          KeyCode::D, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::Q,
          KeyCode::SEMICOLON, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::DOT,
          KeyCode::VK_OPEN_URL_KM_OPEN_MATH_HASKELL_FILE
        </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::SEMICOLON,
          KeyCode::VK_OPEN_URL_KM_NEW_SKETCH_FILE
        </autogen>
    
    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::VK_OPEN_URL_KM_CREATE_NEW_CONTACT
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::K,
        KeyCode::VK_OPEN_URL_KM_INCREASE_YOUTUBE_PLAYBACK
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::VK_OPEN_URL_KM_NEW_SNIPPETSLAB_SNIPPET
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::J,
        KeyCode::VK_OPEN_URL_HAMMERSPOON_RELOAD_CONFIG
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::DOT,
        KeyCode::VK_OPEN_URL_ALFRED_UPDATE_GITHUB_INDEX
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::O,
       KeyCode::VK_OPEN_URL_KM_NEW_MINDNODE_FILE
        </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY_AND_OPEN_WITH_VS_CODE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_PLAY_AND_OPEN_WITH_SUBLIME
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
		</autogen>

       <autogen>
       __KeyToKey__
       KeyCode::A,
       KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_CLEAN
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::3,
       KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::4,
       KeyCode::N, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::1,
       KeyCode::G, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::P,
       KeyCode::VK_OPEN_URL_KM_OPEN_PLAY_JS
        </autogen>

        <autogen>
        __KeyToKey__
        KeyCode::U,
        KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS_UPDATE
        </autogen>


    <autogen>
        __KeyToKey__
        KeyCode::L,
        KeyCode::VK_OPEN_URL_ALFRED_RELOAD_KARABINER_XML
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::VK_OPEN_URL_ALFRED_SCREENSHOT_TO_GOOGLE
    </autogen>


    <autogen>
        __KeyToKey__
        KeyCode::Z,
        KeyCode::VK_OPEN_URL_HAMMERSPOON_OPEN_CONSOLE
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::VK_OPEN_URL_KM_PASS
    </autogen>


  </item>

<item>
    <name>general: sticky z - open chat apps</name>
    <identifier>private.launcher_mode_open_apps_v9</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::Z,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v9, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::Z,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v9</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::Z,
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::VK_OPEN_URL_KM_OPEN_DISCORD
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::VK_OPEN_URL_KM_OPEN_CAPRINE
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::VK_OPEN_URL_KM_OPEN_URL_SLACK
		</autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
      KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

        <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::VK_OPEN_URL_KM_OPEN_SLACK
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, 
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CONTACTS_TEXT
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::VK_OPEN_URL_KM_OPEN_GITTER
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::VK_OPEN_URL_KM_OPEN_SLACK
		</autogen>

        <autogen>
       __KeyToKey__
      KeyCode::M,
      KeyCode::VK_OPEN_URL_ALFRED_MAILTO
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::VK_OPEN_URL_KM_OPEN_DISCORD
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL
		</autogen>

        <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT
		</autogen>

        <autogen>
        __KeyToKey__
      KeyCode::J,
      KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL
		</autogen>

  </item>


<item>
    <name>general: sticky f - essential keybinds</name>
    <identifier>private.launcher_mode_open_apps_v2</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::F,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v2, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::F,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v2</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::F,
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::G, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::QUOTE,
         KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_1
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::D,
       KeyCode::VK_OPEN_URL_KM_MANIPULATE_CLIPBOARD
        </autogen>

            <autogen>
      __KeyToKey__
      KeyCode::SPACE,
        KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT
    </autogen>


       <autogen>
       __KeyToKey__
       KeyCode::U,
       KeyCode::SHIFT_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::R,
       KeyCode::P, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::W,
       KeyCode::VK_OPEN_URL_KM_LOWERCASE_SELECTED_TEXT
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::Z,
       KeyCode::SPACE, ModifierFlag::COMMAND_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::T,
       KeyCode::SPACE, ModifierFlag::CONTROL_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::2,
       KeyCode::H, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::3,
       KeyCode::J, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SLASH,
       KeyCode::VK_OPEN_URL_KM_MAKE_MARKDOWN_LINK_FROM_SELECTION
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::5,
       KeyCode::VK_OPEN_URL_KM_UPPERCASE_SELECTED_TEXT
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::B,
       KeyCode::RETURN, ModifierFlag::SHIFT_L
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::F19,
       KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
        </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::BACKQUOTE,
      KeyCode::Q, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::RETURN
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::RETURN, ModifierFlag::FN
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::F7
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMAND_R,
      KeyCode::RETURN, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::P,
    KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
    KeyCode::X, ModifierFlag::COMMAND_L,
    Option::NOREPEAT,
    </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::Q,
       KeyCode::VK_OPEN_URL_KM_TITLE_CASE_TEXT
        </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::N,
       KeyCode::RETURN, ModifierFlag::COMMAND_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::COMMAND_R,
       KeyCode::RETURN, ModifierFlag::SHIFT_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::SEMICOLON,
       KeyCode::VK_OPEN_URL_ALFRED_SYMBOLS_SEARCH
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::L,
       KeyCode::RETURN, ModifierFlag::CONTROL_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::H,
       KeyCode::RETURN, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::DOT,
       KeyCode::RETURN, ModifierFlag::SHIFT_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::COMMA,
       KeyCode::RETURN, ModifierFlag::SHIFT_L
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::M,
       KeyCode::RETURN, ModifierFlag::OPTION_L
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::E,
         KeyCode::3, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
     </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_1
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::I,
          KeyCode::F11, ModifierFlag::OPTION_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BACKQUOTE,
      KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::S,
                  KeyCode::F12, ModifierFlag::COMMAND_L
               </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::COMMAND_L,
      KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

            <autogen>
      __KeyToKey__
      KeyCode::COMMAND_L,
      KeyCode::U, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

  </item>

<item>
    <name>general: sticky e - command</name>
    <identifier>private.launcher_mode_open_apps_v91</identifier>
  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::E,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v91, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::E,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v91</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::E,
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
          KeyCode::SEMICOLON, ModifierFlag::COMMAND_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::F19,
      KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::0,
      KeyCode::0, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::TAB,
      KeyCode::VK_OPEN_URL_ALFRED_VIEW_SCREENSHOTS
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::QUOTE,
      KeyCode::QUOTE, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::DOT, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::SPACE, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
      KeyCode::Q, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_LEFT,
      KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DANISH_DOLLAR,
      KeyCode::DANISH_DOLLAR, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_RIGHT,
      KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::SEMICOLON, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::1, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::2,
      KeyCode::2, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::3,
      KeyCode::3, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::COMMA, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::4,
      KeyCode::4, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::5,
      KeyCode::5, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::6,
      KeyCode::6, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::7,
      KeyCode::7, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::8,
      KeyCode::8, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::9,
      KeyCode::9, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Q,
      KeyCode::Q, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::W,
      KeyCode::W, ModifierFlag::COMMAND_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::R,
      KeyCode::R, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::T,
      KeyCode::T, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Y,
      KeyCode::Y, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::U,
      KeyCode::U, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::I,
      KeyCode::I, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::O,
      KeyCode::O, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::P,
      KeyCode::P, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::A,
      KeyCode::A, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::D,
      KeyCode::D, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::F,
      KeyCode::F, ModifierFlag::COMMAND_L
  </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::G,
      KeyCode::G, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::H,
      KeyCode::H, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::J,
      KeyCode::J, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::K,
      KeyCode::K, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::L,
      KeyCode::L, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::E, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
    __KeyToKey__
      KeyCode::X,
      KeyCode::X, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::C, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::V,
      KeyCode::V, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::B,
      KeyCode::B, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::N,
      KeyCode::N, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::M,
      KeyCode::M, ModifierFlag::COMMAND_L
  </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SLASH,
      KeyCode::SLASH, ModifierFlag::COMMAND_L
  </autogen>

  </item>

<item>
    <name>general: sticky q - command shift</name>
    <identifier>private.launcher_mode_open_apps_v6</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::Q,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v6, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::Q,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v6</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::Q,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::E, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, 
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::1,
        KeyCode::1, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::2,
        KeyCode::2, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::3,
        KeyCode::3, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::4,
        KeyCode::4, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::5,
        KeyCode::5, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::6,
        KeyCode::6, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::7,
        KeyCode::7, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::8,
        KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::9,
        KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::0,
        KeyCode::0, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::MINUS,
        KeyCode::MINUS, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::EQUAL,
        KeyCode::EQUAL, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::SEMICOLON, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::QUOTE,
      KeyCode::QUOTE, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::W, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::E,
      KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::R,
      KeyCode::R, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::T,
      KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Y,
      KeyCode::Y, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::U,
      KeyCode::U, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::I,
      KeyCode::I, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::O,
      KeyCode::O, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::P,
      KeyCode::P, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::A,
      KeyCode::A, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
    __KeyToKey__
      KeyCode::DOT,
      KeyCode::DOT, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::D,
      KeyCode::D, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::F,
      KeyCode::F, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::G,
      KeyCode::G, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::H,
      KeyCode::H, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::J,
      KeyCode::J, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::K,
      KeyCode::K, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Z,
      KeyCode::Z, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::X,
      KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::C,
      KeyCode::C, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::V,
      KeyCode::V, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::B,
      KeyCode::B, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::N,
      KeyCode::N, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::M,
      KeyCode::M, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
    </autogen>

  </item>

  <item>
    <name>general: sticky a - control modifier</name>
    <identifier>private.launcher_mode_example</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::A,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::A,
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::A,
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
    </autogen>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::F19,
         KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_ANKI
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::9,
         KeyCode::9, ModifierFlag::CONTROL_L
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::8,
         KeyCode::8, ModifierFlag::CONTROL_L
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::7,
         KeyCode::7, ModifierFlag::CONTROL_L
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::6,
         KeyCode::6, ModifierFlag::CONTROL_L
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::COMMAND_R,
         KeyCode::A, ModifierFlag::CONTROL_L
       </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::5,
      KeyCode::5, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::4,
      KeyCode::4, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::0,
      KeyCode::0, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
          KeyCode::SEMICOLON, ModifierFlag::CONTROL_L, 
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_LEFT,
      KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_RIGHT,
      KeyCode::BRACKET_RIGHT, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::R, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::1,
      KeyCode::1, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::DOT, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::COMMA, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::2,
      KeyCode::2, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::3,
      KeyCode::3, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Q,
      KeyCode::Q, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::W,
      KeyCode::W, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::E,
      KeyCode::E, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::T,
      KeyCode::T, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::Y,
      KeyCode::Y, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::U,
      KeyCode::U, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::I,
      KeyCode::I, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::O,
      KeyCode::O, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::P,
      KeyCode::P, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::S,
      KeyCode::S, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::D,
      KeyCode::D, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::COMMAND_L,
      KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
        __KeyToKey__
      KeyCode::F,
      KeyCode::F, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::G,
      KeyCode::G, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::H,
      KeyCode::H, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::Z,
      KeyCode::Z, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::X,
      KeyCode::X, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::C,
      KeyCode::C, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::V,
      KeyCode::V, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::B,
      KeyCode::B, ModifierFlag::CONTROL_L
    </autogen>


    <autogen>
      __KeyDownUpToKey__
      KeyCode::N,
      KeyCode::N, ModifierFlag::CONTROL_L
  </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::M,
      KeyCode::M, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::K,
      KeyCode::K, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::J,
      KeyCode::J, ModifierFlag::CONTROL_L
    </autogen>

    <autogen>
      __KeyDownUpToKey__
      KeyCode::L,
      KeyCode::L, ModifierFlag::CONTROL_L
    </autogen>

  </item>

<!-- added so that I can use vim emulation in iTerm too -->
<replacementdef>
  <replacementname>VIM_EMU_ONLY_APPS</replacementname>
  <replacementvalue></replacementvalue>
</replacementdef>
<replacementdef>
  <replacementname>VIM_EMU_IGNORE_APPS</replacementname>
  <replacementvalue>PASSWORD</replacementvalue>
</replacementdef>

<item>
<name>test: caps lock and a - two different hotkeys for quick and long press</name>
<identifier>private.caps_a_long_press</identifier>
<not>ITERM</not>
<autogen>
  __HoldingKeyToKey__
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
  @end

  <!-- hold -->
  @begin
  KeyCode::5, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
  @end

  Option::NOREPEAT,
</autogen>
</item>


<item>
<name>test: right shift and return, two different hotkeys on long and short</name>
<identifier>private.right_shift_return_two_diff_actions</identifier>
<autogen>
  __HoldingKeyToKey__
  KeyCode::RETURN, ModifierFlag::SHIFT_R,

  <!-- short press -->
  @begin
  KeyCode::RETURN, ModifierFlag::SHIFT_R
  @end

  <!-- hold -->
  @begin
  KeyCode::7, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
  @end

  Option::NOREPEAT,
</autogen>
</item>


<item>
<name>test: left option and a, two different hotkeys when held and when quickly pressed</name>
<identifier>private.left_opt_a_two_diff_actions</identifier>
<autogen>
  __HoldingKeyToKey__
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L

  <!-- short press -->
  @begin
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
  @end

  <!-- hold -->
  @begin
  KeyCode::6, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
  @end

  Option::NOREPEAT,
</autogen>
</item>


<!-- -simple rebinds  -->
<item>
<name>test: left option plus left shift to search documentation for selected text</name>
<identifier>private.left_option_plus_left_shift_to_hotkey</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::8, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>test: control plus left shift to search wiki with selection</name>
<identifier>private.control_shift_for_wiki_selection</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
KeyCode::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
KeyCode::7, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>test: command plus left shift to google selected text</name>
<identifier>private.command_plus_left_shift_to_hotkey</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L, ModifierFlag::COMMAND_L,
KeyCode::SHIFT_L, ModifierFlag::COMMAND_L,
KeyCode::9, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>test: caps lock, shift two times</name>
<identifier>private.caps_shift_two_times</identifier>
<autogen>
__DoublePressModifier__
KeyCode::SHIFT_L,
KeyCode::SHIFT_L,
KeyCode::CAPSLOCK,
</autogen>
</item>


<item>
<name>test: left control - left control and command</name>
<identifier>private.left_control_to_left_control_and_command</identifier>
<autogen>
__KeyToKey__
KeyCode::CONTROL_L,
KeyCode::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>test: left option - control and command</name>
<identifier>private.left_option_to_control_and_command</identifier>
<autogen>
__KeyToKey__
KeyCode::OPTION_L,
KeyCode::OPTION_L,ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>test: left control - control and command - NOT: xcode</name>
<identifier>private.left_control_to_control_and_command</identifier>
<not>XCODE</not>
<autogen>
__KeyToKey__
KeyCode::CONTROL_L,
KeyCode::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
</item>


<item>
<name>general: caps lock as control + option and escape when alone not in iTerm</name>
<identifier>private.left_alt_caps_tab_search_snippets</identifier>
<autogen>
__KeyToKey__
KeyCode::F19, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::0, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::MY_CAPSLOCK | ModifierFlag::NONE,
KeyCode::W, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::CONTROL_L,
KeyCode::CONTROL_L, ModifierFlag::MY_CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::OPTION_L,
KeyCode::OPTION_L, ModifierFlag::MY_OPTION_L,
</autogen>
<autogen>
__KeyOverlaidModifier__
KeyCode::F19,
KeyCode::OPTION_L, ModifierFlag::CONTROL_L | ModifierFlag::MY_CAPSLOCK,
KeyCode::ESCAPE,
</autogen>
</item>


<item>
<name>general: right option on single press as app switcher</name>
<identifier>private.right_opt_as_app_switch</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::OPTION_R,
KeyCode::OPTION_R,
KeyCode::TAB, ModifierFlag::COMMAND_L
</autogen>
</item>

<item>
<name>test: iTerm adjustments for better productivity</name>
<identifier>private.iterm_as_ide</identifier>
<only>ITERM</only>
<autogen>
  __HoldingKeyToKey__
  KeyCode::L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::L, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>


<autogen>
  __HoldingKeyToKey__
  KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::S, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>

<autogen>
  __HoldingKeyToKey__
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::A, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>

<autogen>
  __HoldingKeyToKey__
  KeyCode::Q, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::Q, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::Q, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>


<autogen>
  __HoldingKeyToKey__
  KeyCode::E, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,

  <!-- short press -->
  @begin
  KeyCode::E, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::E, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>


<autogen>
  __HoldingKeyToKey__
  KeyCode::D, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,

  <!-- short press -->
  @begin
  KeyCode::D, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>


<autogen>
  __HoldingKeyToKey__
  KeyCode::B, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,

  <!-- short press -->
  @begin
  KeyCode::B, ModifierFlag::CONTROL_L
  @end

  <!-- hold -->
  @begin
  KeyCode::B, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
  @end

  Option::NOREPEAT,
</autogen>

</item>

<item>
<name>general: caps + left command + top delete to open Fantastical Calendar Input</name>
<identifier>private.caps_left_command_delete_open_fantastical_input</identifier>
<autogen>
__KeyToKey__
KeyCode::DELETE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
</item>

<!-- one more really nicely located app specific hotkey -->
<item>
<name>test: right shift and right command to app specific</name>
<identifier>private.right_shit_and_right_command_to_app_specific</identifier>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R, ModifierFlag::SHIFT_R, ModifierFlag::COMMAND_L,
KeyCode::O, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
</item>


<!-- really useful as I use colon more often then semicolon except when coding javascript or java -->
<item>
<name>test: change colon to semicolon alone</name>
<identifier>private.colon_to_semicolon_alone</identifier>
<inputsource_only>US</inputsource_only>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON
</autogen>
</item>

<item>
<name>test: change semicolon to colon</name>
<identifier>private.semicolon_to_colon_alone</identifier>
<inputsource_only>US</inputsource_only>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
<name>test: caps + right shift to a hotkey</name>
<identifier>private.caps_right_shift_hotkey</identifier>
<autogen>
__KeyToKey__
KeyCode::SHIFT_R, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
KeyCode::W, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
</item>


<item>
<name>test: right shift to command and shift when together, delete when alone</name>
<identifier>private.right_shift_to_command_and_shift</identifier>
<autogen>
--KeyOverlaidModifier--
KeyCode::SHIFT_R,
KeyCode::SHIFT_R, ModifierFlag::COMMAND_L,
KeyCode::DELETE,
Option::KEYOVERLAIDMODIFIER_REPEAT,
</autogen>
</item>


<item>
<name>test: right shift and right command to option and command</name>
<identifier>private.right_shift_and_command_to_option_command</identifier>
<autogen>
--KeyOverlaidModifier--
KeyCode::SHIFT_R, ModifierFlag::COMMAND_R,
KeyCode::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::DELETE, ModifierFlag::COMMAND_L
</autogen>
</item>

<item>
<name>general: left cmd - search mindmap index</name>
<identifier>private.left_cmd_mindmap_index</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::COMMAND_L,
KeyCode::COMMAND_L,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE_CONTENT
</autogen>
</item>

<item>
<name>general: left shift - switch app</name>
<identifier>private.left_shift_to_wm_mode</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L,
KeyCode::SHIFT_L,
 KeyCode::TAB, ModifierFlag::COMMAND_L,
 KeyCode::COMMAND_L
</autogen>
</item>

<item>
    <name>test: right shift - play / stop music</name>
<identifier>private.right_shift_play_music</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_R,
KeyCode::SHIFT_R,
ConsumerKeyCode::MUSIC_PLAY
</autogen>
</item>

<item>
<name>test: left shift - switch to general mode</name>
<identifier>private.left_shift_to_general_mode</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L,
KeyCode::SHIFT_L,
KeyCode::F8, ModifierFlag::COMMAND_L,
KeyCode::VK_OPEN_URL_SHELL_switchprofile_general
</autogen>
</item>

<item>
<name>test: lcmd = google</name>
<identifier>private.left_command_to_dash</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::COMMAND_L,
KeyCode::COMMAND_L,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE
</autogen>
</item>

<item>
<name>test: fn shift to combination plus fn superkey</name>
<identifier>private.fn_shift_to_combination</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::SHIFT_L, ModifierFlag::FN,
KeyCode::1, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::F19, ModifierFlag::FN,
KeyCode::Z, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::FN,
KeyCode::COMMAND_L, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
</item>

<item>
		<name>general: sticky right cmd - things</name>
		<identifier>private.launcher_mode_open_apps_v81</identifier>

  
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::COMMAND_R,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v81, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
    KeyCode::SPACE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v81</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::COMMAND_R,
    </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::M,
                 KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TO_CENTRE_SCREEN
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::RETURN,
                 KeyCode::T, ModifierFlag::COMMAND_L, 
               </autogen>

               <autogen>
                 __KeyToKey__
                 KeyCode::I,
                 KeyCode::MINUS, ModifierFlag::COMMAND_L
               </autogen>

        <autogen>
             __KeyToKey__
             KeyCode::O,
             KeyCode::EQUAL, ModifierFlag::COMMAND_L
           </autogen>

  </item>

<item>
		<name>general: sticky backquote - runnable files + projects</name>
		<identifier>private.launcher_mode_open_apps_v40</identifier>
    <pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
    <modifier_not>
      ModifierFlag::COMMAND_L,
      ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L,
      ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,
      ModifierFlag::OPTION_R,
      ModifierFlag::SHIFT_L,
      ModifierFlag::SHIFT_R,
    </modifier_not>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::BACKQUOTE,

      @begin
      KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v40, ModifierFlag::MY_LAUNCHER_MODE,
      @end

      @begin
      KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE
      @end
    </autogen>
  </item>

  <item hidden="true">
    <identifier vk_config="true">notsave.private_launcher_mode_v40</identifier>

    <autogen>
      __BlockUntilKeyUp__ KeyCode::BACKQUOTE,
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::N,
        KeyCode::VK_OPEN_URL_KM_OPEN_GO_PLAY
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::I,
        KeyCode::VK_OPEN_URL_ALFRED_UNITS
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::V,
        KeyCode::VK_OPEN_URL_KM_OPEN_PLAY_JS
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::A,
         KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

        <autogen>
          __KeyToKey__
          KeyCode::M,
          KeyCode::VK_OPEN_URL_KM_OPEN_RUN_PY_FILE
        </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::S,
         KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::D,
         KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::F,
         KeyCode::F, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::G,
         KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::H,
         KeyCode::H, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::J,
         KeyCode::J, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::K,
         KeyCode::K, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::L,
         KeyCode::L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::SEMICOLON,
         KeyCode::SEMICOLON, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L, 
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::P,
         KeyCode::VK_OPEN_URL_ALFRED_CRYPTO_TRACK
       </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::T,
         KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TIMEZONES
       </autogen>

       <autogen>
       __KeyToKey__
       KeyCode::O,
       KeyCode::VK_OPEN_URL_ALFRED_COLOUR_PICKER
        </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::0,
         KeyCode::VK_OPEN_URL_ALFRED_MONTHS_NUMBERS
       </autogen>


      <autogen>
          __KeyToKey__
          KeyCode::U,
        KeyCode::VK_OPEN_URL_ALFRED_CURL_URL
      </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::R,
        KeyCode::VK_OPEN_URL_ALFRED_GO_TO_SUB
    </autogen>

    <autogen>
        __KeyToKey__
        KeyCode::W,
        KeyCode::VK_OPEN_URL_ALFRED_FONT_AWESOME
    </autogen>

       <autogen>
         __KeyToKey__
         KeyCode::SPACE,
         KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, 
       </autogen>

  </item>

  <!-- _one to one mappings  TODO: add -->

  <item>
      <name>general: opt + return = safari</name>
      <identifier>private.open_safari_opt_return</identifier>
      <autogen>
          __KeyToKey__
          KeyCode::RETURN, ModifierFlag::OPTION_R,
          KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI
      </autogen>
  </item>

  <item>
      <name>general: sticky right command - control - something</name>
      <identifier>private.right_command_control_and_things</identifier>

      <autogen>
          __KeyToKey__
          KeyCode::A, ModifierFlag::CONTROL_R,
          KeyCode::T, ModifierFlag::COMMAND_R
      </autogen>

  </item>

  <item>
      <name>general: sim jl = alfred</name>
      <identifier>private.sim_jl_typinator</identifier>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::SPACE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
    </autogen>
  </item>

  <item>
      <name>general: sim m, = some</name>
      <identifier>private.sim_mcomma_some</identifier>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMA, KeyCode::M,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
    </autogen>
  </item>

  <item>
      <name>general: sim jk = google</name>
      <identifier>private.sim_jk_google</identifier>
 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE
    </autogen>
  </item>

  <item>
      <name>general: sim o: = chrome history</name>
      <identifier>private.sim_o:_google</identifier>
 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
    </autogen>
  </item>

  <item>
      <name>general: sim :, = chrome history</name>
      <identifier>private.sim_o,_google</identifier>
 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::COMMA,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
    </autogen>
  </item>

  <item>
      <name>general: sim l, = chrome history</name>
      <identifier>private.sim_l,_google</identifier>
 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::L, KeyCode::COMMA,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
    </autogen>
  </item>

  <item>
      <name>general: sim kl = typinator</name>
      <identifier>private.sim_kl_typinator</identifier>

 <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DASH
    </autogen>
  </item>

      <item>
          <name>general: sim kh = yandex</name>
      <identifier>private.sim_hk_duck_search</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::H, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_YANDEX_SEARCH
      </autogen>
  </item>

      <item>
          <name>general: sim lm = safari bookmarks</name>
      <identifier>private.sim_lm_bookmarks</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::L, KeyCode::M,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS
      </autogen>
  </item>

      <item>
          <name>general: sim :l = dictionary</name>
      <identifier>private.sim_:l_dic</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
      </autogen>
  </item>

      <item>
          <name>general: sim lh = lab</name>
      <identifier>private.sim_hl_lab</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::H, KeyCode::L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH
      </autogen>
  </item>

      <item>
          <name>general: sim ok = mindnode content search</name>
      <identifier>private.sim_ok_mindnode_content_search</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_EDIT_FILES
      </autogen>
  </item>

      <item>
          <name>general: sim oj = mindnode</name>
      <identifier>private.sim_oj_mindnode</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INSIDE_MINDMAPS
      </autogen>
  </item>

      <item>
          <name>general: sim km = youtube</name>
      <identifier>private.sim_km_lab</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::K, KeyCode::M,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::R, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
      </autogen>
  </item>

      <item>
          <name>general: sim ln = dash</name>
      <identifier>private.sim_ln_dash</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::L, KeyCode::N,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CHROME_BOOKMARKS
      </autogen>
  </item>

      <item>
          <name>general: sim jn = yandex</name>
      <identifier>private.sim_jn_yandex</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::N,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_YANDEX_SEARCH
      </autogen>
  </item>

      <item>
          <name>general: sim ij = equal</name>
      <identifier>private.sim_ij_equal_sign</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::I,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::EQUAL
      </autogen>
  </item>

      <item>
          <name>general: sim oi = iterm sessions</name>
      <identifier>private.sim_oi_iterm_profiles</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::O, KeyCode::I,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_ITERM_TTY
      </autogen>
  </item>

      <item>
          <name>general: sim :k = amazon</name>
      <identifier>private.sim_:k_amazon</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
      </autogen>
  </item>

      <item>
          <name>general: sim :m = safari tabs</name>
      <identifier>private.sim_:m_safari_tabs</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::M,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH
      </autogen>
  </item>

      <item>
          <name>general: sim :j = wiki</name>
      <identifier>private.sim_:j_wiki</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::J,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_VIEW_SAFARI_TABS
      </autogen>
  </item>

      <item>
          <name>general: sim nlcmd = github</name>
      <identifier>private.sim_nlcmd_down</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_L, KeyCode::N,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB
      </autogen>
  </item>

      <item>
          <name>general: sim wrcmd = downloads</name>
      <identifier>private.sim_wrcmd_down</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_R, KeyCode::W,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_RECENT_DOWNLOADS
      </autogen>
  </item>

      <item>
          <name>general: sim :rcmd = dic</name>
      <identifier>private.sim_:rcmd_dic</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_R, KeyCode::SEMICOLON,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_KEYCLUE
      </autogen>
  </item>

      <item>
          <name>general: sim :lcmd = dash</name>
      <identifier>private.sim_lcmd_downloads</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_OPEN_DOCUMENTATION
      </autogen>
  </item>

      <item>
          <name>general: sim :n = lab</name>
      <identifier>private.sim_:n_dic</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::SEMICOLON, KeyCode::N,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
		KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
      </autogen>
  </item>

      <item>
          <name>general: sim on = lab</name>
      <identifier>private.sim_on_lab</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::N, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH
      </autogen>
  </item>

      <item>
          <name>general: sim om = keyclue</name>
      <identifier>private.sim_om_wind</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::M, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
      KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL
      </autogen>
  </item>

      <item>
          <name>general: sim hj = amazon</name>
      <identifier>private.sim_hj_amazon</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::H, KeyCode::J,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_AMAZON_SEARCH
      </autogen>
  </item>

      <item>
          <name>test: sim oh = research</name>
      <identifier>private.sim_oh_keyclue</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::H, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_LAYOUT_MANAGER
      </autogen>
  </item>

      <item>
          <name>general: sim jrcmd = xcode</name>
      <identifier>private.sim_xcode_search_cmd</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_R, KeyCode::J,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_XCODE
      </autogen>
  </item>

      <item>
          <name>general: sim jlcmd = focus</name>
      <identifier>private.sim_jlcmd_timer_view</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_L, KeyCode::J,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_ACTIVATE_FOCUS
      </autogen>
  </item>

      <item>
          <name>general: sim op = icloud</name>
      <identifier>private.sim_op_spotify</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::P, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_ICLOUD_TABS
      </autogen>
  </item>

      <item>
          <name>general: sim ou = icloud</name>
      <identifier>private.sim_ou_spotify</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::U, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH
      </autogen>
  </item>

      <item>
          <name>general: sim klcmd = timer</name>
      <identifier>private.sim_klcmd_timer</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_L, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_OPEN_URL_ALFRED_TIMER_START
      </autogen>
  </item>

      <item>
          <name>general: sim orcmd = archive</name>
      <identifier>private.sim_rcmd_spotify</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_R, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
           KeyCode::VK_OPEN_URL_ALFRED_KEYCLUE
      </autogen>
  </item>

      <item>
          <name>general: sim olcmd = pocket</name>
      <identifier>private.sim_olcmd_spoti</identifier>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_L, KeyCode::O,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
       KeyCode::VK_OPEN_URL_ALFRED_MAILTO
      </autogen>
  </item>

<item>
<name>general: sim kn = lab</name>
<identifier>private.sim_kn_normal</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::N,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_LUCKY
</autogen>
</item>

<item>
<name>general: sim lrcmd = spotify current track</name>
<identifier>private.sim_rcmd_current_track</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_CURRENT_TRACK
</autogen>
</item>

<item>
<name>general: sim k + rcmd = timer stop</name>
<identifier>private.sim_stop_timer</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_TIMER_VIEW
</autogen>
</item>

<item>
<name>general: sim arcmd = xcode</name>
<identifier>private.sim_alcmd_play</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::A, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_XCODE
</autogen>
</item>

<item>
<name>general: sim rrcmd = pods</name>
<identifier>private.sim_rrcmd_pods</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::R, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PODS
</autogen>
</item>

<item>
<name>general: sim prcmd = intellij</name>
<identifier>private.sim_prcmd_spoti</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::P, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_JAVA_PROJECTS_SEARCH
</autogen>
</item>

<item>
<name>general: sim ercmd = intellij</name>
<identifier>private.sim_rcmd_spoti</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::E, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_JAVA_PROJECTS_SEARCH
</autogen>
</item>

<item>
<name>general: sim :h = docs</name>
<identifier>private.sim_semh_docs</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::H,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
</autogen>
</item>

<item>
<name>general: sim pi = docs</name>
<identifier>private.pi_git'</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::I, KeyCode::P,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_OPEN_DOCUMENTATION
</autogen>
</item>

<item>
<name>general: sim pk = git</name>
<identifier>private.pk_git'</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::P,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_DRIVE
</autogen>
</item>

<item>
<name>general: sim mrcmd = km macros</name>
<identifier>private.mrcmd_macros</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::M, KeyCode::COMMAND_R,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH
</autogen>
</item>

<item>
<name>general: sim pj = docs</name>
<identifier>private.pj_docs'</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::P,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH
</autogen>
</item>

<item>
    <name>general: sim space quote = keyclue</name>
<identifier>private.sim_quote_key</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::QUOTE, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KEYCLUE
</autogen>
</item>

<item>
<name>general: sim space , = keyclue</name>
<identifier>private.sim_comma_key</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::COMMA, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KARABINER_PROFILES
</autogen>
</item>

<item>
<name>general: sim space : = dash</name>
<identifier>private.sim_sem__dash</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_DASH_PROFILE_SWITCH
</autogen>
</item>

<item>
<name>general: sim space j = safari</name>
<identifier>private.sim_space_j_dash</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI
</autogen>
</item>

<item>
<name>general: sim space l = current tabs</name>
<identifier>private.sim_space_l_curr_tabs</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH
</autogen>
</item>

<item>
<name>general: sim space k = safari</name>
<identifier>private.sim_space_k_saf</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_YOUTUBE_SEARCH
</autogen>
</item>

<item>
<name>general: sim space o = xcode</name>
<identifier>private.sim_space_o_xcode</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::O, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF
</autogen>
</item>

<item>
<name>general: sim space m = wiki</name>
<identifier>private.sim_space_wiki</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::M, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KEYCLUE
</autogen>
</item>

<item>
<name>general: sim space n = xcode</name>
<identifier>private.sim_space_n_xcode</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::N, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_ASK_CREATE_SHARE
</autogen>
</item>

<item>
<name>general: sim space dot = youtube</name>
<identifier>private.sim_space_dot_youtube</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::DOT, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_KM_GET_CURRENT_CHROME_URL
</autogen>
</item>

<item>
<name>general: sim space i = youtube</name>
<identifier>private.sim_space_i_youtube</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::I, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_IMAGES
</autogen>
</item>

<item>
<name>general: sim space h = youtube</name>
<identifier>private.sim_space_h_youtube</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::H, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_LUCKY
</autogen>
</item>

<item>
<name>general: sim llcmd = spotify main</name>
<identifier>private.sim_lcmd_spoti</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::COMMAND_L,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN
</autogen>
</item>

  <item>
      <only>MINDNODE</only>
      <name>mindnode: left command to option</name>
      <identifier>private.mindnode_left_cmd_to_opt</identifier>
      <autogen>
          __KeyToKey__
          PointingButton::LEFT, ModifierFlag::COMMAND_L,
          PointingButton::LEFT, ModifierFlag::OPTION_L
      </autogen>
  </item>

</root>
